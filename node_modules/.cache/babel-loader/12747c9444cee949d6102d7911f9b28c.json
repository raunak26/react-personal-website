{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function get() {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  }\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar react_1 = __importStar(require(\"react\"));\n\nfunction FadeIn(props) {\n  var _a = react_1.useState(0),\n      maxIsVisible = _a[0],\n      setMaxIsVisible = _a[1];\n\n  var transitionDuration = props.transitionDuration || 400;\n  var delay = props.delay || 50;\n  var WrapperTag = props.wrapperTag || \"div\";\n  var ChildTag = props.childTag || \"div\";\n  var visible = typeof props.visible === \"undefined\" ? true : props.visible;\n  react_1.useEffect(function () {\n    var count = react_1.default.Children.count(props.children);\n\n    if (!visible) {\n      // Animate all children out\n      count = 0;\n    }\n\n    if (count == maxIsVisible) {\n      // We're done updating maxVisible, notify when animation is done\n      var timeout_1 = setTimeout(function () {\n        if (props.onComplete) props.onComplete();\n      }, transitionDuration);\n      return function () {\n        return clearTimeout(timeout_1);\n      };\n    } // Move maxIsVisible toward count\n\n\n    var increment = count > maxIsVisible ? 1 : -1;\n    var timeout = setTimeout(function () {\n      setMaxIsVisible(maxIsVisible + increment);\n    }, delay);\n    return function () {\n      return clearTimeout(timeout);\n    };\n  }, [react_1.default.Children.count(props.children), delay, maxIsVisible, visible, transitionDuration]);\n  return react_1.default.createElement(WrapperTag, {\n    className: props.className\n  }, react_1.default.Children.map(props.children, function (child, i) {\n    return react_1.default.createElement(ChildTag, {\n      className: props.childClassName,\n      style: {\n        transition: \"opacity \" + transitionDuration + \"ms, transform \" + transitionDuration + \"ms\",\n        transform: maxIsVisible > i ? \"none\" : \"translateY(20px)\",\n        opacity: maxIsVisible > i ? 1 : 0\n      }\n    }, child);\n  }));\n}\n\nexports.default = FadeIn;","map":null,"metadata":{},"sourceType":"script"}