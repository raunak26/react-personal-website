{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Canvas = void 0;\n\nconst Utils_1 = require(\"../Utils\");\n\nconst Utils_2 = require(\"../Utils\");\n\nclass Canvas {\n  constructor(container) {\n    this.container = container;\n    this.size = {\n      height: 0,\n      width: 0\n    };\n    this.context = null;\n    this.generatedCanvas = false;\n  }\n\n  init() {\n    this.resize();\n    this.initStyle();\n    this.initCover();\n    this.initTrail();\n    this.initBackground();\n    this.paint();\n  }\n\n  loadCanvas(canvas, generatedCanvas) {\n    var _a;\n\n    if (!canvas.className) {\n      canvas.className = Utils_1.Constants.canvasClass;\n    }\n\n    if (this.generatedCanvas) {\n      (_a = this.element) === null || _a === void 0 ? void 0 : _a.remove();\n    }\n\n    this.generatedCanvas = generatedCanvas !== null && generatedCanvas !== void 0 ? generatedCanvas : this.generatedCanvas;\n    this.element = canvas;\n    this.originalStyle = Utils_1.deepExtend({}, this.element.style);\n    this.size.height = canvas.offsetHeight;\n    this.size.width = canvas.offsetWidth;\n    this.context = this.element.getContext(\"2d\");\n    this.container.retina.init();\n    this.initBackground();\n  }\n\n  destroy() {\n    var _a;\n\n    if (this.generatedCanvas) {\n      (_a = this.element) === null || _a === void 0 ? void 0 : _a.remove();\n    }\n\n    this.safePaint(ctx => {\n      Utils_2.clear(ctx, this.size);\n    });\n  }\n\n  paint() {\n    const options = this.container.actualOptions;\n    this.safePaint(ctx => {\n      if (options.backgroundMask.enable && options.backgroundMask.cover && this.coverColor) {\n        Utils_2.clear(ctx, this.size);\n        this.paintBase(Utils_1.getStyleFromRgb(this.coverColor, this.coverColor.a));\n      } else {\n        this.paintBase();\n      }\n    });\n  }\n\n  clear() {\n    const options = this.container.actualOptions;\n    const trail = options.particles.move.trail;\n\n    if (options.backgroundMask.enable) {\n      this.paint();\n    } else if (trail.enable && trail.length > 0 && this.trailFillColor) {\n      this.paintBase(Utils_1.getStyleFromRgb(this.trailFillColor, 1 / trail.length));\n    } else {\n      this.safePaint(ctx => {\n        Utils_2.clear(ctx, this.size);\n      });\n    }\n  }\n\n  windowResize() {\n    if (!this.element) {\n      return;\n    }\n\n    const container = this.container;\n    this.resize();\n    container.actualOptions.setResponsive(this.size.width, container.retina.pixelRatio, container.options);\n    container.particles.setDensity();\n\n    for (const [, plugin] of container.plugins) {\n      if (plugin.resize !== undefined) {\n        plugin.resize();\n      }\n    }\n  }\n\n  resize() {\n    if (!this.element) {\n      return;\n    }\n\n    const container = this.container;\n    const pxRatio = container.retina.pixelRatio;\n    const size = container.canvas.size;\n    const oldSize = {\n      width: size.width,\n      height: size.height\n    };\n    size.width = this.element.offsetWidth * pxRatio;\n    size.height = this.element.offsetHeight * pxRatio;\n    this.element.width = size.width;\n    this.element.height = size.height;\n\n    if (this.container.started) {\n      this.resizeFactor = {\n        width: size.width / oldSize.width,\n        height: size.height / oldSize.height\n      };\n    }\n  }\n\n  drawConnectLine(p1, p2) {\n    this.safePaint(ctx => {\n      var _a;\n\n      const lineStyle = this.lineStyle(p1, p2);\n\n      if (!lineStyle) {\n        return;\n      }\n\n      const pos1 = p1.getPosition();\n      const pos2 = p2.getPosition();\n      Utils_1.drawConnectLine(ctx, (_a = p1.linksWidth) !== null && _a !== void 0 ? _a : this.container.retina.linksWidth, lineStyle, pos1, pos2);\n    });\n  }\n\n  drawGrabLine(particle, lineColor, opacity, mousePos) {\n    const container = this.container;\n    this.safePaint(ctx => {\n      var _a;\n\n      const beginPos = particle.getPosition();\n      Utils_1.drawGrabLine(ctx, (_a = particle.linksWidth) !== null && _a !== void 0 ? _a : container.retina.linksWidth, beginPos, mousePos, lineColor, opacity);\n    });\n  }\n\n  drawParticleShadow(particle, mousePos) {\n    this.safePaint(ctx => {\n      Utils_1.drawParticleShadow(this.container, ctx, particle, mousePos);\n    });\n  }\n\n  drawLinkTriangle(p1, link1, link2) {\n    var _a;\n\n    const container = this.container;\n    const options = container.actualOptions;\n    const p2 = link1.destination;\n    const p3 = link2.destination;\n    const triangleOptions = p1.options.links.triangles;\n    const opacityTriangle = (_a = triangleOptions.opacity) !== null && _a !== void 0 ? _a : (link1.opacity + link2.opacity) / 2;\n\n    if (opacityTriangle <= 0) {\n      return;\n    }\n\n    this.safePaint(ctx => {\n      const pos1 = p1.getPosition();\n      const pos2 = p2.getPosition();\n      const pos3 = p3.getPosition();\n\n      if (Utils_1.getDistance(pos1, pos2) > container.retina.linksDistance || Utils_1.getDistance(pos3, pos2) > container.retina.linksDistance || Utils_1.getDistance(pos3, pos1) > container.retina.linksDistance) {\n        return;\n      }\n\n      let colorTriangle = Utils_1.colorToRgb(triangleOptions.color);\n\n      if (!colorTriangle) {\n        const linksOptions = p1.options.links;\n        const linkColor = linksOptions.id !== undefined ? container.particles.linksColors.get(linksOptions.id) : container.particles.linksColor;\n        colorTriangle = Utils_1.getLinkColor(p1, p2, linkColor);\n\n        if (!colorTriangle) {\n          return;\n        }\n      }\n\n      Utils_1.drawLinkTriangle(ctx, pos1, pos2, pos3, options.backgroundMask.enable, options.backgroundMask.composite, colorTriangle, opacityTriangle);\n    });\n  }\n\n  drawLinkLine(p1, link) {\n    const container = this.container;\n    const options = container.actualOptions;\n    const p2 = link.destination;\n    let opacity = link.opacity;\n    const pos1 = p1.getPosition();\n    const pos2 = p2.getPosition();\n    this.safePaint(ctx => {\n      var _a, _b;\n\n      let colorLine;\n      const twinkle = p1.options.twinkle.lines;\n\n      if (twinkle.enable) {\n        const twinkleFreq = twinkle.frequency;\n        const twinkleRgb = Utils_1.colorToRgb(twinkle.color);\n        const twinkling = Math.random() < twinkleFreq;\n\n        if (twinkling && twinkleRgb !== undefined) {\n          colorLine = twinkleRgb;\n          opacity = twinkle.opacity;\n        }\n      }\n\n      if (!colorLine) {\n        const linksOptions = p1.options.links;\n        const linkColor = linksOptions.id !== undefined ? container.particles.linksColors.get(linksOptions.id) : container.particles.linksColor;\n        colorLine = Utils_1.getLinkColor(p1, p2, linkColor);\n      }\n\n      if (!colorLine) {\n        return;\n      }\n\n      const width = (_a = p1.linksWidth) !== null && _a !== void 0 ? _a : container.retina.linksWidth;\n      const maxDistance = (_b = p1.linksDistance) !== null && _b !== void 0 ? _b : container.retina.linksDistance;\n      Utils_1.drawLinkLine(ctx, width, pos1, pos2, maxDistance, container.canvas.size, p1.options.links.warp, options.backgroundMask.enable, options.backgroundMask.composite, colorLine, opacity, p1.options.links.shadow);\n    });\n  }\n\n  drawParticle(particle, delta) {\n    var _a, _b, _c, _d;\n\n    if (((_a = particle.image) === null || _a === void 0 ? void 0 : _a.loaded) === false || particle.spawning || particle.destroyed) {\n      return;\n    }\n\n    const pfColor = particle.getFillColor();\n    const psColor = (_b = particle.getStrokeColor()) !== null && _b !== void 0 ? _b : pfColor;\n\n    if (!pfColor && !psColor) {\n      return;\n    }\n\n    let [fColor, sColor] = this.getPluginParticleColors(particle);\n    const pOptions = particle.options;\n    const twinkle = pOptions.twinkle.particles;\n    const twinkling = twinkle.enable && Math.random() < twinkle.frequency;\n\n    if (!fColor || !sColor) {\n      const twinkleRgb = Utils_1.colorToHsl(twinkle.color);\n\n      if (!fColor) {\n        fColor = twinkling && twinkleRgb !== undefined ? twinkleRgb : pfColor ? pfColor : undefined;\n      }\n\n      if (!sColor) {\n        sColor = twinkling && twinkleRgb !== undefined ? twinkleRgb : psColor ? psColor : undefined;\n      }\n    }\n\n    const options = this.container.actualOptions;\n    const zIndexOptions = particle.options.zIndex;\n    const zOpacityFactor = 1 - zIndexOptions.opacityRate * particle.zIndexFactor;\n    const radius = particle.getRadius();\n    const opacity = twinkling ? twinkle.opacity : (_c = particle.bubble.opacity) !== null && _c !== void 0 ? _c : particle.opacity.value;\n    const strokeOpacity = (_d = particle.stroke.opacity) !== null && _d !== void 0 ? _d : opacity;\n    const zOpacity = opacity * zOpacityFactor;\n    const fillColorValue = fColor ? Utils_1.getStyleFromHsl(fColor, zOpacity) : undefined;\n\n    if (!fillColorValue && !sColor) {\n      return;\n    }\n\n    this.safePaint(ctx => {\n      const zSizeFactor = 1 - zIndexOptions.sizeRate * particle.zIndexFactor;\n      const zStrokeOpacity = strokeOpacity * zOpacityFactor;\n      const strokeColorValue = sColor ? Utils_1.getStyleFromHsl(sColor, zStrokeOpacity) : fillColorValue;\n      this.drawParticleLinks(particle);\n\n      if (radius > 0) {\n        Utils_1.drawParticle(this.container, ctx, particle, delta, fillColorValue, strokeColorValue, options.backgroundMask.enable, options.backgroundMask.composite, radius * zSizeFactor, zOpacity, particle.options.shadow);\n      }\n    });\n  }\n\n  drawParticleLinks(particle) {\n    this.safePaint(ctx => {\n      const container = this.container;\n      const particles = container.particles;\n      const pOptions = particle.options;\n\n      if (particle.links.length > 0) {\n        ctx.save();\n        const p1Links = particle.links.filter(l => {\n          const linkFreq = container.particles.getLinkFrequency(particle, l.destination);\n          return linkFreq <= pOptions.links.frequency;\n        });\n\n        for (const link of p1Links) {\n          const p2 = link.destination;\n\n          if (pOptions.links.triangles.enable) {\n            const links = p1Links.map(l => l.destination);\n            const vertices = p2.links.filter(t => {\n              const linkFreq = container.particles.getLinkFrequency(p2, t.destination);\n              return linkFreq <= p2.options.links.frequency && links.indexOf(t.destination) >= 0;\n            });\n\n            if (vertices.length) {\n              for (const vertex of vertices) {\n                const p3 = vertex.destination;\n                const triangleFreq = particles.getTriangleFrequency(particle, p2, p3);\n\n                if (triangleFreq > pOptions.links.triangles.frequency) {\n                  continue;\n                }\n\n                this.drawLinkTriangle(particle, link, vertex);\n              }\n            }\n          }\n\n          if (link.opacity > 0 && container.retina.linksWidth > 0) {\n            this.drawLinkLine(particle, link);\n          }\n        }\n\n        ctx.restore();\n      }\n    });\n  }\n\n  drawPlugin(plugin, delta) {\n    this.safePaint(ctx => {\n      Utils_1.drawPlugin(ctx, plugin, delta);\n    });\n  }\n\n  drawLight(mousePos) {\n    this.safePaint(ctx => {\n      Utils_1.drawLight(this.container, ctx, mousePos);\n    });\n  }\n\n  initBackground() {\n    const options = this.container.actualOptions;\n    const background = options.background;\n    const element = this.element;\n    const elementStyle = element === null || element === void 0 ? void 0 : element.style;\n\n    if (!elementStyle) {\n      return;\n    }\n\n    if (background.color) {\n      const color = Utils_1.colorToRgb(background.color);\n      elementStyle.backgroundColor = color ? Utils_1.getStyleFromRgb(color, background.opacity) : \"\";\n    } else {\n      elementStyle.backgroundColor = \"\";\n    }\n\n    elementStyle.backgroundImage = background.image || \"\";\n    elementStyle.backgroundPosition = background.position || \"\";\n    elementStyle.backgroundRepeat = background.repeat || \"\";\n    elementStyle.backgroundSize = background.size || \"\";\n  }\n\n  initCover() {\n    const options = this.container.actualOptions;\n    const cover = options.backgroundMask.cover;\n    const color = cover.color;\n    const coverRgb = Utils_1.colorToRgb(color);\n\n    if (coverRgb) {\n      this.coverColor = {\n        r: coverRgb.r,\n        g: coverRgb.g,\n        b: coverRgb.b,\n        a: cover.opacity\n      };\n    }\n  }\n\n  initTrail() {\n    const options = this.container.actualOptions;\n    const trail = options.particles.move.trail;\n    const fillColor = Utils_1.colorToRgb(trail.fillColor);\n\n    if (fillColor) {\n      const trail = options.particles.move.trail;\n      this.trailFillColor = {\n        r: fillColor.r,\n        g: fillColor.g,\n        b: fillColor.b,\n        a: 1 / trail.length\n      };\n    }\n  }\n\n  getPluginParticleColors(particle) {\n    let fColor;\n    let sColor;\n\n    for (const [, plugin] of this.container.plugins) {\n      if (!fColor && plugin.particleFillColor) {\n        fColor = Utils_1.colorToHsl(plugin.particleFillColor(particle));\n      }\n\n      if (!sColor && plugin.particleStrokeColor) {\n        sColor = Utils_1.colorToHsl(plugin.particleStrokeColor(particle));\n      }\n\n      if (fColor && sColor) {\n        break;\n      }\n    }\n\n    return [fColor, sColor];\n  }\n\n  initStyle() {\n    const element = this.element,\n          options = this.container.actualOptions;\n\n    if (!element) {\n      return;\n    }\n\n    const originalStyle = this.originalStyle;\n\n    if (options.fullScreen.enable) {\n      this.originalStyle = Utils_1.deepExtend({}, element.style);\n      element.style.position = \"fixed\";\n      element.style.zIndex = options.fullScreen.zIndex.toString(10);\n      element.style.top = \"0\";\n      element.style.left = \"0\";\n      element.style.width = \"100%\";\n      element.style.height = \"100%\";\n    } else if (originalStyle) {\n      element.style.position = originalStyle.position;\n      element.style.zIndex = originalStyle.zIndex;\n      element.style.top = originalStyle.top;\n      element.style.left = originalStyle.left;\n      element.style.width = originalStyle.width;\n      element.style.height = originalStyle.height;\n    }\n  }\n\n  paintBase(baseColor) {\n    this.safePaint(ctx => {\n      Utils_1.paintBase(ctx, this.size, baseColor);\n    });\n  }\n\n  lineStyle(p1, p2) {\n    return this.safePaint(ctx => {\n      const options = this.container.actualOptions;\n      const connectOptions = options.interactivity.modes.connect;\n      return Utils_1.gradient(ctx, p1, p2, connectOptions.links.opacity);\n    });\n  }\n\n  safePaint(cb) {\n    if (!this.context) {\n      return;\n    }\n\n    return cb(this.context);\n  }\n\n}\n\nexports.Canvas = Canvas;","map":{"version":3,"names":["Object","defineProperty","exports","value","Canvas","Utils_1","require","Utils_2","constructor","container","size","height","width","context","generatedCanvas","init","resize","initStyle","initCover","initTrail","initBackground","paint","loadCanvas","canvas","_a","className","Constants","canvasClass","element","remove","originalStyle","deepExtend","style","offsetHeight","offsetWidth","getContext","retina","destroy","safePaint","ctx","clear","options","actualOptions","backgroundMask","enable","cover","coverColor","paintBase","getStyleFromRgb","a","trail","particles","move","length","trailFillColor","windowResize","setResponsive","pixelRatio","setDensity","plugin","plugins","undefined","pxRatio","oldSize","started","resizeFactor","drawConnectLine","p1","p2","lineStyle","pos1","getPosition","pos2","linksWidth","drawGrabLine","particle","lineColor","opacity","mousePos","beginPos","drawParticleShadow","drawLinkTriangle","link1","link2","destination","p3","triangleOptions","links","triangles","opacityTriangle","pos3","getDistance","linksDistance","colorTriangle","colorToRgb","color","linksOptions","linkColor","id","linksColors","get","linksColor","getLinkColor","composite","drawLinkLine","link","_b","colorLine","twinkle","lines","twinkleFreq","frequency","twinkleRgb","twinkling","Math","random","maxDistance","warp","shadow","drawParticle","delta","_c","_d","image","loaded","spawning","destroyed","pfColor","getFillColor","psColor","getStrokeColor","fColor","sColor","getPluginParticleColors","pOptions","colorToHsl","zIndexOptions","zIndex","zOpacityFactor","opacityRate","zIndexFactor","radius","getRadius","bubble","strokeOpacity","stroke","zOpacity","fillColorValue","getStyleFromHsl","zSizeFactor","sizeRate","zStrokeOpacity","strokeColorValue","drawParticleLinks","save","p1Links","filter","l","linkFreq","getLinkFrequency","map","vertices","t","indexOf","vertex","triangleFreq","getTriangleFrequency","restore","drawPlugin","drawLight","background","elementStyle","backgroundColor","backgroundImage","backgroundPosition","position","backgroundRepeat","repeat","backgroundSize","coverRgb","r","g","b","fillColor","particleFillColor","particleStrokeColor","fullScreen","toString","top","left","baseColor","connectOptions","interactivity","modes","connect","gradient","cb"],"sources":["/Users/raunakanand/Documents/GitHub/react-personal-website/node_modules/tsparticles/Core/Canvas.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Canvas = void 0;\nconst Utils_1 = require(\"../Utils\");\nconst Utils_2 = require(\"../Utils\");\nclass Canvas {\n    constructor(container) {\n        this.container = container;\n        this.size = {\n            height: 0,\n            width: 0,\n        };\n        this.context = null;\n        this.generatedCanvas = false;\n    }\n    init() {\n        this.resize();\n        this.initStyle();\n        this.initCover();\n        this.initTrail();\n        this.initBackground();\n        this.paint();\n    }\n    loadCanvas(canvas, generatedCanvas) {\n        var _a;\n        if (!canvas.className) {\n            canvas.className = Utils_1.Constants.canvasClass;\n        }\n        if (this.generatedCanvas) {\n            (_a = this.element) === null || _a === void 0 ? void 0 : _a.remove();\n        }\n        this.generatedCanvas = generatedCanvas !== null && generatedCanvas !== void 0 ? generatedCanvas : this.generatedCanvas;\n        this.element = canvas;\n        this.originalStyle = Utils_1.deepExtend({}, this.element.style);\n        this.size.height = canvas.offsetHeight;\n        this.size.width = canvas.offsetWidth;\n        this.context = this.element.getContext(\"2d\");\n        this.container.retina.init();\n        this.initBackground();\n    }\n    destroy() {\n        var _a;\n        if (this.generatedCanvas) {\n            (_a = this.element) === null || _a === void 0 ? void 0 : _a.remove();\n        }\n        this.safePaint((ctx) => {\n            Utils_2.clear(ctx, this.size);\n        });\n    }\n    paint() {\n        const options = this.container.actualOptions;\n        this.safePaint((ctx) => {\n            if (options.backgroundMask.enable && options.backgroundMask.cover && this.coverColor) {\n                Utils_2.clear(ctx, this.size);\n                this.paintBase(Utils_1.getStyleFromRgb(this.coverColor, this.coverColor.a));\n            }\n            else {\n                this.paintBase();\n            }\n        });\n    }\n    clear() {\n        const options = this.container.actualOptions;\n        const trail = options.particles.move.trail;\n        if (options.backgroundMask.enable) {\n            this.paint();\n        }\n        else if (trail.enable && trail.length > 0 && this.trailFillColor) {\n            this.paintBase(Utils_1.getStyleFromRgb(this.trailFillColor, 1 / trail.length));\n        }\n        else {\n            this.safePaint((ctx) => {\n                Utils_2.clear(ctx, this.size);\n            });\n        }\n    }\n    windowResize() {\n        if (!this.element) {\n            return;\n        }\n        const container = this.container;\n        this.resize();\n        container.actualOptions.setResponsive(this.size.width, container.retina.pixelRatio, container.options);\n        container.particles.setDensity();\n        for (const [, plugin] of container.plugins) {\n            if (plugin.resize !== undefined) {\n                plugin.resize();\n            }\n        }\n    }\n    resize() {\n        if (!this.element) {\n            return;\n        }\n        const container = this.container;\n        const pxRatio = container.retina.pixelRatio;\n        const size = container.canvas.size;\n        const oldSize = {\n            width: size.width,\n            height: size.height,\n        };\n        size.width = this.element.offsetWidth * pxRatio;\n        size.height = this.element.offsetHeight * pxRatio;\n        this.element.width = size.width;\n        this.element.height = size.height;\n        if (this.container.started) {\n            this.resizeFactor = {\n                width: size.width / oldSize.width,\n                height: size.height / oldSize.height,\n            };\n        }\n    }\n    drawConnectLine(p1, p2) {\n        this.safePaint((ctx) => {\n            var _a;\n            const lineStyle = this.lineStyle(p1, p2);\n            if (!lineStyle) {\n                return;\n            }\n            const pos1 = p1.getPosition();\n            const pos2 = p2.getPosition();\n            Utils_1.drawConnectLine(ctx, (_a = p1.linksWidth) !== null && _a !== void 0 ? _a : this.container.retina.linksWidth, lineStyle, pos1, pos2);\n        });\n    }\n    drawGrabLine(particle, lineColor, opacity, mousePos) {\n        const container = this.container;\n        this.safePaint((ctx) => {\n            var _a;\n            const beginPos = particle.getPosition();\n            Utils_1.drawGrabLine(ctx, (_a = particle.linksWidth) !== null && _a !== void 0 ? _a : container.retina.linksWidth, beginPos, mousePos, lineColor, opacity);\n        });\n    }\n    drawParticleShadow(particle, mousePos) {\n        this.safePaint((ctx) => {\n            Utils_1.drawParticleShadow(this.container, ctx, particle, mousePos);\n        });\n    }\n    drawLinkTriangle(p1, link1, link2) {\n        var _a;\n        const container = this.container;\n        const options = container.actualOptions;\n        const p2 = link1.destination;\n        const p3 = link2.destination;\n        const triangleOptions = p1.options.links.triangles;\n        const opacityTriangle = (_a = triangleOptions.opacity) !== null && _a !== void 0 ? _a : (link1.opacity + link2.opacity) / 2;\n        if (opacityTriangle <= 0) {\n            return;\n        }\n        this.safePaint((ctx) => {\n            const pos1 = p1.getPosition();\n            const pos2 = p2.getPosition();\n            const pos3 = p3.getPosition();\n            if (Utils_1.getDistance(pos1, pos2) > container.retina.linksDistance ||\n                Utils_1.getDistance(pos3, pos2) > container.retina.linksDistance ||\n                Utils_1.getDistance(pos3, pos1) > container.retina.linksDistance) {\n                return;\n            }\n            let colorTriangle = Utils_1.colorToRgb(triangleOptions.color);\n            if (!colorTriangle) {\n                const linksOptions = p1.options.links;\n                const linkColor = linksOptions.id !== undefined\n                    ? container.particles.linksColors.get(linksOptions.id)\n                    : container.particles.linksColor;\n                colorTriangle = Utils_1.getLinkColor(p1, p2, linkColor);\n                if (!colorTriangle) {\n                    return;\n                }\n            }\n            Utils_1.drawLinkTriangle(ctx, pos1, pos2, pos3, options.backgroundMask.enable, options.backgroundMask.composite, colorTriangle, opacityTriangle);\n        });\n    }\n    drawLinkLine(p1, link) {\n        const container = this.container;\n        const options = container.actualOptions;\n        const p2 = link.destination;\n        let opacity = link.opacity;\n        const pos1 = p1.getPosition();\n        const pos2 = p2.getPosition();\n        this.safePaint((ctx) => {\n            var _a, _b;\n            let colorLine;\n            const twinkle = p1.options.twinkle.lines;\n            if (twinkle.enable) {\n                const twinkleFreq = twinkle.frequency;\n                const twinkleRgb = Utils_1.colorToRgb(twinkle.color);\n                const twinkling = Math.random() < twinkleFreq;\n                if (twinkling && twinkleRgb !== undefined) {\n                    colorLine = twinkleRgb;\n                    opacity = twinkle.opacity;\n                }\n            }\n            if (!colorLine) {\n                const linksOptions = p1.options.links;\n                const linkColor = linksOptions.id !== undefined\n                    ? container.particles.linksColors.get(linksOptions.id)\n                    : container.particles.linksColor;\n                colorLine = Utils_1.getLinkColor(p1, p2, linkColor);\n            }\n            if (!colorLine) {\n                return;\n            }\n            const width = (_a = p1.linksWidth) !== null && _a !== void 0 ? _a : container.retina.linksWidth;\n            const maxDistance = (_b = p1.linksDistance) !== null && _b !== void 0 ? _b : container.retina.linksDistance;\n            Utils_1.drawLinkLine(ctx, width, pos1, pos2, maxDistance, container.canvas.size, p1.options.links.warp, options.backgroundMask.enable, options.backgroundMask.composite, colorLine, opacity, p1.options.links.shadow);\n        });\n    }\n    drawParticle(particle, delta) {\n        var _a, _b, _c, _d;\n        if (((_a = particle.image) === null || _a === void 0 ? void 0 : _a.loaded) === false || particle.spawning || particle.destroyed) {\n            return;\n        }\n        const pfColor = particle.getFillColor();\n        const psColor = (_b = particle.getStrokeColor()) !== null && _b !== void 0 ? _b : pfColor;\n        if (!pfColor && !psColor) {\n            return;\n        }\n        let [fColor, sColor] = this.getPluginParticleColors(particle);\n        const pOptions = particle.options;\n        const twinkle = pOptions.twinkle.particles;\n        const twinkling = twinkle.enable && Math.random() < twinkle.frequency;\n        if (!fColor || !sColor) {\n            const twinkleRgb = Utils_1.colorToHsl(twinkle.color);\n            if (!fColor) {\n                fColor = twinkling && twinkleRgb !== undefined ? twinkleRgb : pfColor ? pfColor : undefined;\n            }\n            if (!sColor) {\n                sColor = twinkling && twinkleRgb !== undefined ? twinkleRgb : psColor ? psColor : undefined;\n            }\n        }\n        const options = this.container.actualOptions;\n        const zIndexOptions = particle.options.zIndex;\n        const zOpacityFactor = 1 - zIndexOptions.opacityRate * particle.zIndexFactor;\n        const radius = particle.getRadius();\n        const opacity = twinkling ? twinkle.opacity : (_c = particle.bubble.opacity) !== null && _c !== void 0 ? _c : particle.opacity.value;\n        const strokeOpacity = (_d = particle.stroke.opacity) !== null && _d !== void 0 ? _d : opacity;\n        const zOpacity = opacity * zOpacityFactor;\n        const fillColorValue = fColor ? Utils_1.getStyleFromHsl(fColor, zOpacity) : undefined;\n        if (!fillColorValue && !sColor) {\n            return;\n        }\n        this.safePaint((ctx) => {\n            const zSizeFactor = 1 - zIndexOptions.sizeRate * particle.zIndexFactor;\n            const zStrokeOpacity = strokeOpacity * zOpacityFactor;\n            const strokeColorValue = sColor ? Utils_1.getStyleFromHsl(sColor, zStrokeOpacity) : fillColorValue;\n            this.drawParticleLinks(particle);\n            if (radius > 0) {\n                Utils_1.drawParticle(this.container, ctx, particle, delta, fillColorValue, strokeColorValue, options.backgroundMask.enable, options.backgroundMask.composite, radius * zSizeFactor, zOpacity, particle.options.shadow);\n            }\n        });\n    }\n    drawParticleLinks(particle) {\n        this.safePaint((ctx) => {\n            const container = this.container;\n            const particles = container.particles;\n            const pOptions = particle.options;\n            if (particle.links.length > 0) {\n                ctx.save();\n                const p1Links = particle.links.filter((l) => {\n                    const linkFreq = container.particles.getLinkFrequency(particle, l.destination);\n                    return linkFreq <= pOptions.links.frequency;\n                });\n                for (const link of p1Links) {\n                    const p2 = link.destination;\n                    if (pOptions.links.triangles.enable) {\n                        const links = p1Links.map((l) => l.destination);\n                        const vertices = p2.links.filter((t) => {\n                            const linkFreq = container.particles.getLinkFrequency(p2, t.destination);\n                            return linkFreq <= p2.options.links.frequency && links.indexOf(t.destination) >= 0;\n                        });\n                        if (vertices.length) {\n                            for (const vertex of vertices) {\n                                const p3 = vertex.destination;\n                                const triangleFreq = particles.getTriangleFrequency(particle, p2, p3);\n                                if (triangleFreq > pOptions.links.triangles.frequency) {\n                                    continue;\n                                }\n                                this.drawLinkTriangle(particle, link, vertex);\n                            }\n                        }\n                    }\n                    if (link.opacity > 0 && container.retina.linksWidth > 0) {\n                        this.drawLinkLine(particle, link);\n                    }\n                }\n                ctx.restore();\n            }\n        });\n    }\n    drawPlugin(plugin, delta) {\n        this.safePaint((ctx) => {\n            Utils_1.drawPlugin(ctx, plugin, delta);\n        });\n    }\n    drawLight(mousePos) {\n        this.safePaint((ctx) => {\n            Utils_1.drawLight(this.container, ctx, mousePos);\n        });\n    }\n    initBackground() {\n        const options = this.container.actualOptions;\n        const background = options.background;\n        const element = this.element;\n        const elementStyle = element === null || element === void 0 ? void 0 : element.style;\n        if (!elementStyle) {\n            return;\n        }\n        if (background.color) {\n            const color = Utils_1.colorToRgb(background.color);\n            elementStyle.backgroundColor = color ? Utils_1.getStyleFromRgb(color, background.opacity) : \"\";\n        }\n        else {\n            elementStyle.backgroundColor = \"\";\n        }\n        elementStyle.backgroundImage = background.image || \"\";\n        elementStyle.backgroundPosition = background.position || \"\";\n        elementStyle.backgroundRepeat = background.repeat || \"\";\n        elementStyle.backgroundSize = background.size || \"\";\n    }\n    initCover() {\n        const options = this.container.actualOptions;\n        const cover = options.backgroundMask.cover;\n        const color = cover.color;\n        const coverRgb = Utils_1.colorToRgb(color);\n        if (coverRgb) {\n            this.coverColor = {\n                r: coverRgb.r,\n                g: coverRgb.g,\n                b: coverRgb.b,\n                a: cover.opacity,\n            };\n        }\n    }\n    initTrail() {\n        const options = this.container.actualOptions;\n        const trail = options.particles.move.trail;\n        const fillColor = Utils_1.colorToRgb(trail.fillColor);\n        if (fillColor) {\n            const trail = options.particles.move.trail;\n            this.trailFillColor = {\n                r: fillColor.r,\n                g: fillColor.g,\n                b: fillColor.b,\n                a: 1 / trail.length,\n            };\n        }\n    }\n    getPluginParticleColors(particle) {\n        let fColor;\n        let sColor;\n        for (const [, plugin] of this.container.plugins) {\n            if (!fColor && plugin.particleFillColor) {\n                fColor = Utils_1.colorToHsl(plugin.particleFillColor(particle));\n            }\n            if (!sColor && plugin.particleStrokeColor) {\n                sColor = Utils_1.colorToHsl(plugin.particleStrokeColor(particle));\n            }\n            if (fColor && sColor) {\n                break;\n            }\n        }\n        return [fColor, sColor];\n    }\n    initStyle() {\n        const element = this.element, options = this.container.actualOptions;\n        if (!element) {\n            return;\n        }\n        const originalStyle = this.originalStyle;\n        if (options.fullScreen.enable) {\n            this.originalStyle = Utils_1.deepExtend({}, element.style);\n            element.style.position = \"fixed\";\n            element.style.zIndex = options.fullScreen.zIndex.toString(10);\n            element.style.top = \"0\";\n            element.style.left = \"0\";\n            element.style.width = \"100%\";\n            element.style.height = \"100%\";\n        }\n        else if (originalStyle) {\n            element.style.position = originalStyle.position;\n            element.style.zIndex = originalStyle.zIndex;\n            element.style.top = originalStyle.top;\n            element.style.left = originalStyle.left;\n            element.style.width = originalStyle.width;\n            element.style.height = originalStyle.height;\n        }\n    }\n    paintBase(baseColor) {\n        this.safePaint((ctx) => {\n            Utils_1.paintBase(ctx, this.size, baseColor);\n        });\n    }\n    lineStyle(p1, p2) {\n        return this.safePaint((ctx) => {\n            const options = this.container.actualOptions;\n            const connectOptions = options.interactivity.modes.connect;\n            return Utils_1.gradient(ctx, p1, p2, connectOptions.links.opacity);\n        });\n    }\n    safePaint(cb) {\n        if (!this.context) {\n            return;\n        }\n        return cb(this.context);\n    }\n}\nexports.Canvas = Canvas;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}