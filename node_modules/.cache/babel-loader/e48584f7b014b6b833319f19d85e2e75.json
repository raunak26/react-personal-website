{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ParticlesInfecter = void 0;\n\nconst ParticlesInteractorBase_1 = require(\"../../Core/ParticlesInteractorBase\");\n\nclass ParticlesInfecter extends ParticlesInteractorBase_1.ParticlesInteractorBase {\n  constructor(container) {\n    super(container);\n  }\n\n  isEnabled() {\n    var _a, _b;\n\n    const infOptions = this.container.actualOptions;\n    return (_b = (_a = infOptions === null || infOptions === void 0 ? void 0 : infOptions.infection) === null || _a === void 0 ? void 0 : _a.enable) !== null && _b !== void 0 ? _b : false;\n  }\n\n  reset() {}\n\n  interact(p1, delta) {\n    var _a, _b;\n\n    const infecter = this.container.infecter;\n\n    if (!infecter) {\n      return;\n    }\n\n    infecter.updateInfection(p1, delta.value);\n\n    if (p1.infection.stage === undefined) {\n      return;\n    }\n\n    const container = this.container;\n    const options = container.actualOptions;\n    const infectionOptions = options.infection;\n\n    if (!infectionOptions.enable || infectionOptions.stages.length < 1) {\n      return;\n    }\n\n    const infectionStage1 = infectionOptions.stages[p1.infection.stage];\n    const pxRatio = container.retina.pixelRatio;\n    const radius = p1.getRadius() * 2 + infectionStage1.radius * pxRatio;\n    const pos = p1.getPosition();\n    const infectedStage1 = (_a = infectionStage1.infectedStage) !== null && _a !== void 0 ? _a : p1.infection.stage;\n    const query = container.particles.quadTree.queryCircle(pos, radius);\n    const infections = infectionStage1.rate;\n    const neighbors = query.length;\n\n    for (const p2 of query) {\n      const infP2 = p2;\n\n      if (infP2 === p1 || infP2.destroyed || infP2.spawning || !(infP2.infection.stage === undefined || infP2.infection.stage !== p1.infection.stage)) {\n        continue;\n      }\n\n      if (Math.random() < infections / neighbors) {\n        if (infP2.infection.stage === undefined) {\n          infecter.startInfection(infP2, infectedStage1);\n        } else if (infP2.infection.stage < p1.infection.stage) {\n          infecter.updateInfectionStage(infP2, infectedStage1);\n        } else if (infP2.infection.stage > p1.infection.stage) {\n          const infectionStage2 = infectionOptions.stages[infP2.infection.stage];\n          const infectedStage2 = (_b = infectionStage2 === null || infectionStage2 === void 0 ? void 0 : infectionStage2.infectedStage) !== null && _b !== void 0 ? _b : infP2.infection.stage;\n          infecter.updateInfectionStage(p1, infectedStage2);\n        }\n      }\n    }\n  }\n\n}\n\nexports.ParticlesInfecter = ParticlesInfecter;","map":{"version":3,"names":["Object","defineProperty","exports","value","ParticlesInfecter","ParticlesInteractorBase_1","require","ParticlesInteractorBase","constructor","container","isEnabled","_a","_b","infOptions","actualOptions","infection","enable","reset","interact","p1","delta","infecter","updateInfection","stage","undefined","options","infectionOptions","stages","length","infectionStage1","pxRatio","retina","pixelRatio","radius","getRadius","pos","getPosition","infectedStage1","infectedStage","query","particles","quadTree","queryCircle","infections","rate","neighbors","p2","infP2","destroyed","spawning","Math","random","startInfection","updateInfectionStage","infectionStage2","infectedStage2"],"sources":["/Users/raunakanand/Documents/GitHub/react-personal-website/node_modules/tsparticles/Plugins/Infection/ParticlesInfecter.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ParticlesInfecter = void 0;\nconst ParticlesInteractorBase_1 = require(\"../../Core/ParticlesInteractorBase\");\nclass ParticlesInfecter extends ParticlesInteractorBase_1.ParticlesInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    isEnabled() {\n        var _a, _b;\n        const infOptions = this.container.actualOptions;\n        return (_b = (_a = infOptions === null || infOptions === void 0 ? void 0 : infOptions.infection) === null || _a === void 0 ? void 0 : _a.enable) !== null && _b !== void 0 ? _b : false;\n    }\n    reset() {\n    }\n    interact(p1, delta) {\n        var _a, _b;\n        const infecter = this.container.infecter;\n        if (!infecter) {\n            return;\n        }\n        infecter.updateInfection(p1, delta.value);\n        if (p1.infection.stage === undefined) {\n            return;\n        }\n        const container = this.container;\n        const options = container.actualOptions;\n        const infectionOptions = options.infection;\n        if (!infectionOptions.enable || infectionOptions.stages.length < 1) {\n            return;\n        }\n        const infectionStage1 = infectionOptions.stages[p1.infection.stage];\n        const pxRatio = container.retina.pixelRatio;\n        const radius = p1.getRadius() * 2 + infectionStage1.radius * pxRatio;\n        const pos = p1.getPosition();\n        const infectedStage1 = (_a = infectionStage1.infectedStage) !== null && _a !== void 0 ? _a : p1.infection.stage;\n        const query = container.particles.quadTree.queryCircle(pos, radius);\n        const infections = infectionStage1.rate;\n        const neighbors = query.length;\n        for (const p2 of query) {\n            const infP2 = p2;\n            if (infP2 === p1 ||\n                infP2.destroyed ||\n                infP2.spawning ||\n                !(infP2.infection.stage === undefined || infP2.infection.stage !== p1.infection.stage)) {\n                continue;\n            }\n            if (Math.random() < infections / neighbors) {\n                if (infP2.infection.stage === undefined) {\n                    infecter.startInfection(infP2, infectedStage1);\n                }\n                else if (infP2.infection.stage < p1.infection.stage) {\n                    infecter.updateInfectionStage(infP2, infectedStage1);\n                }\n                else if (infP2.infection.stage > p1.infection.stage) {\n                    const infectionStage2 = infectionOptions.stages[infP2.infection.stage];\n                    const infectedStage2 = (_b = infectionStage2 === null || infectionStage2 === void 0 ? void 0 : infectionStage2.infectedStage) !== null && _b !== void 0 ? _b : infP2.infection.stage;\n                    infecter.updateInfectionStage(p1, infectedStage2);\n                }\n            }\n        }\n    }\n}\nexports.ParticlesInfecter = ParticlesInfecter;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}