{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CanvasUtils = exports.drawPlugin = exports.drawShapeAfterEffect = exports.drawShape = exports.drawParticle = exports.drawParticleShadow = exports.drawLight = exports.drawGrabLine = exports.gradient = exports.drawConnectLine = exports.drawLinkTriangle = exports.drawLinkLine = exports.clear = exports.paintBase = void 0;\n\nconst NumberUtils_1 = require(\"./NumberUtils\");\n\nconst ColorUtils_1 = require(\"./ColorUtils\");\n\nfunction drawLine(context, begin, end) {\n  context.beginPath();\n  context.moveTo(begin.x, begin.y);\n  context.lineTo(end.x, end.y);\n  context.closePath();\n}\n\nfunction drawTriangle(context, p1, p2, p3) {\n  context.beginPath();\n  context.moveTo(p1.x, p1.y);\n  context.lineTo(p2.x, p2.y);\n  context.lineTo(p3.x, p3.y);\n  context.closePath();\n}\n\nfunction paintBase(context, dimension, baseColor) {\n  context.save();\n  context.fillStyle = baseColor !== null && baseColor !== void 0 ? baseColor : \"rgba(0,0,0,0)\";\n  context.fillRect(0, 0, dimension.width, dimension.height);\n  context.restore();\n}\n\nexports.paintBase = paintBase;\n\nfunction clear(context, dimension) {\n  context.clearRect(0, 0, dimension.width, dimension.height);\n}\n\nexports.clear = clear;\n\nfunction drawLinkLine(context, width, begin, end, maxDistance, canvasSize, warp, backgroundMask, composite, colorLine, opacity, shadow) {\n  let drawn = false;\n\n  if (NumberUtils_1.getDistance(begin, end) <= maxDistance) {\n    drawLine(context, begin, end);\n    drawn = true;\n  } else if (warp) {\n    let pi1;\n    let pi2;\n    const endNE = {\n      x: end.x - canvasSize.width,\n      y: end.y\n    };\n    const d1 = NumberUtils_1.getDistances(begin, endNE);\n\n    if (d1.distance <= maxDistance) {\n      const yi = begin.y - d1.dy / d1.dx * begin.x;\n      pi1 = {\n        x: 0,\n        y: yi\n      };\n      pi2 = {\n        x: canvasSize.width,\n        y: yi\n      };\n    } else {\n      const endSW = {\n        x: end.x,\n        y: end.y - canvasSize.height\n      };\n      const d2 = NumberUtils_1.getDistances(begin, endSW);\n\n      if (d2.distance <= maxDistance) {\n        const yi = begin.y - d2.dy / d2.dx * begin.x;\n        const xi = -yi / (d2.dy / d2.dx);\n        pi1 = {\n          x: xi,\n          y: 0\n        };\n        pi2 = {\n          x: xi,\n          y: canvasSize.height\n        };\n      } else {\n        const endSE = {\n          x: end.x - canvasSize.width,\n          y: end.y - canvasSize.height\n        };\n        const d3 = NumberUtils_1.getDistances(begin, endSE);\n\n        if (d3.distance <= maxDistance) {\n          const yi = begin.y - d3.dy / d3.dx * begin.x;\n          const xi = -yi / (d3.dy / d3.dx);\n          pi1 = {\n            x: xi,\n            y: yi\n          };\n          pi2 = {\n            x: pi1.x + canvasSize.width,\n            y: pi1.y + canvasSize.height\n          };\n        }\n      }\n    }\n\n    if (pi1 && pi2) {\n      drawLine(context, begin, pi1);\n      drawLine(context, end, pi2);\n      drawn = true;\n    }\n  }\n\n  if (!drawn) {\n    return;\n  }\n\n  context.lineWidth = width;\n\n  if (backgroundMask) {\n    context.globalCompositeOperation = composite;\n  }\n\n  context.strokeStyle = ColorUtils_1.getStyleFromRgb(colorLine, opacity);\n\n  if (shadow.enable) {\n    const shadowColor = ColorUtils_1.colorToRgb(shadow.color);\n\n    if (shadowColor) {\n      context.shadowBlur = shadow.blur;\n      context.shadowColor = ColorUtils_1.getStyleFromRgb(shadowColor);\n    }\n  }\n\n  context.stroke();\n}\n\nexports.drawLinkLine = drawLinkLine;\n\nfunction drawLinkTriangle(context, pos1, pos2, pos3, backgroundMask, composite, colorTriangle, opacityTriangle) {\n  drawTriangle(context, pos1, pos2, pos3);\n\n  if (backgroundMask) {\n    context.globalCompositeOperation = composite;\n  }\n\n  context.fillStyle = ColorUtils_1.getStyleFromRgb(colorTriangle, opacityTriangle);\n  context.fill();\n}\n\nexports.drawLinkTriangle = drawLinkTriangle;\n\nfunction drawConnectLine(context, width, lineStyle, begin, end) {\n  context.save();\n  drawLine(context, begin, end);\n  context.lineWidth = width;\n  context.strokeStyle = lineStyle;\n  context.stroke();\n  context.restore();\n}\n\nexports.drawConnectLine = drawConnectLine;\n\nfunction gradient(context, p1, p2, opacity) {\n  const gradStop = Math.floor(p2.getRadius() / p1.getRadius());\n  const color1 = p1.getFillColor();\n  const color2 = p2.getFillColor();\n\n  if (!color1 || !color2) {\n    return;\n  }\n\n  const sourcePos = p1.getPosition();\n  const destPos = p2.getPosition();\n  const midRgb = ColorUtils_1.colorMix(color1, color2, p1.getRadius(), p2.getRadius());\n  const grad = context.createLinearGradient(sourcePos.x, sourcePos.y, destPos.x, destPos.y);\n  grad.addColorStop(0, ColorUtils_1.getStyleFromHsl(color1, opacity));\n  grad.addColorStop(gradStop > 1 ? 1 : gradStop, ColorUtils_1.getStyleFromRgb(midRgb, opacity));\n  grad.addColorStop(1, ColorUtils_1.getStyleFromHsl(color2, opacity));\n  return grad;\n}\n\nexports.gradient = gradient;\n\nfunction drawGrabLine(context, width, begin, end, colorLine, opacity) {\n  context.save();\n  drawLine(context, begin, end);\n  context.strokeStyle = ColorUtils_1.getStyleFromRgb(colorLine, opacity);\n  context.lineWidth = width;\n  context.stroke();\n  context.restore();\n}\n\nexports.drawGrabLine = drawGrabLine;\n\nfunction drawLight(container, context, mousePos) {\n  const lightOptions = container.actualOptions.interactivity.modes.light.area;\n  context.beginPath();\n  context.arc(mousePos.x, mousePos.y, lightOptions.radius, 0, 2 * Math.PI);\n  const gradientAmbientLight = context.createRadialGradient(mousePos.x, mousePos.y, 0, mousePos.x, mousePos.y, lightOptions.radius);\n  const gradient = lightOptions.gradient;\n  const gradientRgb = {\n    start: ColorUtils_1.colorToRgb(gradient.start),\n    stop: ColorUtils_1.colorToRgb(gradient.stop)\n  };\n\n  if (!gradientRgb.start || !gradientRgb.stop) {\n    return;\n  }\n\n  gradientAmbientLight.addColorStop(0, ColorUtils_1.getStyleFromRgb(gradientRgb.start));\n  gradientAmbientLight.addColorStop(1, ColorUtils_1.getStyleFromRgb(gradientRgb.stop));\n  context.fillStyle = gradientAmbientLight;\n  context.fill();\n}\n\nexports.drawLight = drawLight;\n\nfunction drawParticleShadow(container, context, particle, mousePos) {\n  const pos = particle.getPosition();\n  const shadowOptions = container.actualOptions.interactivity.modes.light.shadow;\n  context.save();\n  const radius = particle.getRadius();\n  const sides = particle.sides;\n  const full = Math.PI * 2 / sides;\n  const angle = -particle.rotate.value + Math.PI / 4;\n  const factor = 1;\n  const dots = [];\n\n  for (let i = 0; i < sides; i++) {\n    dots.push({\n      x: pos.x + radius * Math.sin(angle + full * i) * factor,\n      y: pos.y + radius * Math.cos(angle + full * i) * factor\n    });\n  }\n\n  const points = [];\n  const shadowLength = shadowOptions.length;\n\n  for (const dot of dots) {\n    const dotAngle = Math.atan2(mousePos.y - dot.y, mousePos.x - dot.x);\n    const endX = dot.x + shadowLength * Math.sin(-dotAngle - Math.PI / 2);\n    const endY = dot.y + shadowLength * Math.cos(-dotAngle - Math.PI / 2);\n    points.push({\n      endX: endX,\n      endY: endY,\n      startX: dot.x,\n      startY: dot.y\n    });\n  }\n\n  const shadowRgb = ColorUtils_1.colorToRgb(shadowOptions.color);\n\n  if (!shadowRgb) {\n    return;\n  }\n\n  const shadowColor = ColorUtils_1.getStyleFromRgb(shadowRgb);\n\n  for (let i = points.length - 1; i >= 0; i--) {\n    const n = i == points.length - 1 ? 0 : i + 1;\n    context.beginPath();\n    context.moveTo(points[i].startX, points[i].startY);\n    context.lineTo(points[n].startX, points[n].startY);\n    context.lineTo(points[n].endX, points[n].endY);\n    context.lineTo(points[i].endX, points[i].endY);\n    context.fillStyle = shadowColor;\n    context.fill();\n  }\n\n  context.restore();\n}\n\nexports.drawParticleShadow = drawParticleShadow;\n\nfunction drawParticle(container, context, particle, delta, fillColorValue, strokeColorValue, backgroundMask, composite, radius, opacity, shadow) {\n  const pos = particle.getPosition();\n  const tiltOptions = particle.options.tilt;\n  const rollOptions = particle.options.roll;\n  context.save();\n\n  if (tiltOptions.enable || rollOptions.enable) {\n    context.setTransform(rollOptions.enable ? Math.cos(particle.rollAngle) : 1, tiltOptions.enable ? Math.cos(particle.tilt.value) * particle.tilt.cosDirection : 0, tiltOptions.enable ? Math.sin(particle.tilt.value) * particle.tilt.sinDirection : 0, rollOptions.enable ? Math.sin(particle.rollAngle) : 1, pos.x, pos.y);\n  } else {\n    context.translate(pos.x, pos.y);\n  }\n\n  context.beginPath();\n  const angle = particle.rotate.value + (particle.options.rotate.path ? particle.velocity.angle : 0);\n\n  if (angle !== 0) {\n    context.rotate(angle);\n  }\n\n  if (backgroundMask) {\n    context.globalCompositeOperation = composite;\n  }\n\n  const shadowColor = particle.shadowColor;\n\n  if (shadow.enable && shadowColor) {\n    context.shadowBlur = shadow.blur;\n    context.shadowColor = ColorUtils_1.getStyleFromRgb(shadowColor);\n    context.shadowOffsetX = shadow.offset.x;\n    context.shadowOffsetY = shadow.offset.y;\n  }\n\n  if (fillColorValue) {\n    context.fillStyle = fillColorValue;\n  }\n\n  const stroke = particle.stroke;\n  context.lineWidth = particle.strokeWidth;\n\n  if (strokeColorValue) {\n    context.strokeStyle = strokeColorValue;\n  }\n\n  drawShape(container, context, particle, radius, opacity, delta);\n\n  if (stroke.width > 0) {\n    context.stroke();\n  }\n\n  if (particle.close) {\n    context.closePath();\n  }\n\n  if (particle.fill) {\n    context.fill();\n  }\n\n  context.restore();\n  context.save();\n\n  if (tiltOptions.enable) {\n    context.setTransform(1, Math.cos(particle.tilt.value) * particle.tilt.cosDirection, Math.sin(particle.tilt.value) * particle.tilt.sinDirection, 1, pos.x, pos.y);\n  } else {\n    context.translate(pos.x, pos.y);\n  }\n\n  if (angle !== 0) {\n    context.rotate(angle);\n  }\n\n  if (backgroundMask) {\n    context.globalCompositeOperation = composite;\n  }\n\n  drawShapeAfterEffect(container, context, particle, radius, opacity, delta);\n  context.restore();\n}\n\nexports.drawParticle = drawParticle;\n\nfunction drawShape(container, context, particle, radius, opacity, delta) {\n  if (!particle.shape) {\n    return;\n  }\n\n  const drawer = container.drawers.get(particle.shape);\n\n  if (!drawer) {\n    return;\n  }\n\n  drawer.draw(context, particle, radius, opacity, delta, container.retina.pixelRatio);\n}\n\nexports.drawShape = drawShape;\n\nfunction drawShapeAfterEffect(container, context, particle, radius, opacity, delta) {\n  if (!particle.shape) {\n    return;\n  }\n\n  const drawer = container.drawers.get(particle.shape);\n\n  if (!(drawer === null || drawer === void 0 ? void 0 : drawer.afterEffect)) {\n    return;\n  }\n\n  drawer.afterEffect(context, particle, radius, opacity, delta, container.retina.pixelRatio);\n}\n\nexports.drawShapeAfterEffect = drawShapeAfterEffect;\n\nfunction drawPlugin(context, plugin, delta) {\n  if (!plugin.draw) {\n    return;\n  }\n\n  context.save();\n  plugin.draw(context, delta);\n  context.restore();\n}\n\nexports.drawPlugin = drawPlugin;\n\nclass CanvasUtils {\n  static paintBase(context, dimension, baseColor) {\n    paintBase(context, dimension, baseColor);\n  }\n\n  static clear(context, dimension) {\n    clear(context, dimension);\n  }\n\n  static drawLinkLine(context, width, begin, end, maxDistance, canvasSize, warp, backgroundMask, composite, colorLine, opacity, shadow) {\n    drawLinkLine(context, width, begin, end, maxDistance, canvasSize, warp, backgroundMask, composite, colorLine, opacity, shadow);\n  }\n\n  static drawLinkTriangle(context, pos1, pos2, pos3, backgroundMask, composite, colorTriangle, opacityTriangle) {\n    drawLinkTriangle(context, pos1, pos2, pos3, backgroundMask, composite, colorTriangle, opacityTriangle);\n  }\n\n  static drawConnectLine(context, width, lineStyle, begin, end) {\n    drawConnectLine(context, width, lineStyle, begin, end);\n  }\n\n  static gradient(context, p1, p2, opacity) {\n    return gradient(context, p1, p2, opacity);\n  }\n\n  static drawGrabLine(context, width, begin, end, colorLine, opacity) {\n    drawGrabLine(context, width, begin, end, colorLine, opacity);\n  }\n\n  static drawLight(container, context, mousePos) {\n    drawLight(container, context, mousePos);\n  }\n\n  static drawParticleShadow(container, context, particle, mousePos) {\n    drawParticleShadow(container, context, particle, mousePos);\n  }\n\n  static drawParticle(container, context, particle, delta, fillColorValue, strokeColorValue, backgroundMask, composite, radius, opacity, shadow) {\n    drawParticle(container, context, particle, delta, fillColorValue, strokeColorValue, backgroundMask, composite, radius, opacity, shadow);\n  }\n\n  static drawShape(container, context, particle, radius, opacity, delta) {\n    drawShape(container, context, particle, radius, opacity, delta);\n  }\n\n  static drawShapeAfterEffect(container, context, particle, radius, opacity, delta) {\n    drawShapeAfterEffect(container, context, particle, radius, opacity, delta);\n  }\n\n  static drawPlugin(context, plugin, delta) {\n    drawPlugin(context, plugin, delta);\n  }\n\n}\n\nexports.CanvasUtils = CanvasUtils;","map":{"version":3,"names":["Object","defineProperty","exports","value","CanvasUtils","drawPlugin","drawShapeAfterEffect","drawShape","drawParticle","drawParticleShadow","drawLight","drawGrabLine","gradient","drawConnectLine","drawLinkTriangle","drawLinkLine","clear","paintBase","NumberUtils_1","require","ColorUtils_1","drawLine","context","begin","end","beginPath","moveTo","x","y","lineTo","closePath","drawTriangle","p1","p2","p3","dimension","baseColor","save","fillStyle","fillRect","width","height","restore","clearRect","maxDistance","canvasSize","warp","backgroundMask","composite","colorLine","opacity","shadow","drawn","getDistance","pi1","pi2","endNE","d1","getDistances","distance","yi","dy","dx","endSW","d2","xi","endSE","d3","lineWidth","globalCompositeOperation","strokeStyle","getStyleFromRgb","enable","shadowColor","colorToRgb","color","shadowBlur","blur","stroke","pos1","pos2","pos3","colorTriangle","opacityTriangle","fill","lineStyle","gradStop","Math","floor","getRadius","color1","getFillColor","color2","sourcePos","getPosition","destPos","midRgb","colorMix","grad","createLinearGradient","addColorStop","getStyleFromHsl","container","mousePos","lightOptions","actualOptions","interactivity","modes","light","area","arc","radius","PI","gradientAmbientLight","createRadialGradient","gradientRgb","start","stop","particle","pos","shadowOptions","sides","full","angle","rotate","factor","dots","i","push","sin","cos","points","shadowLength","length","dot","dotAngle","atan2","endX","endY","startX","startY","shadowRgb","n","delta","fillColorValue","strokeColorValue","tiltOptions","options","tilt","rollOptions","roll","setTransform","rollAngle","cosDirection","sinDirection","translate","path","velocity","shadowOffsetX","offset","shadowOffsetY","strokeWidth","close","shape","drawer","drawers","get","draw","retina","pixelRatio","afterEffect","plugin"],"sources":["/Users/raunakanand/Documents/GitHub/react-personal-website/node_modules/tsparticles/Utils/CanvasUtils.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CanvasUtils = exports.drawPlugin = exports.drawShapeAfterEffect = exports.drawShape = exports.drawParticle = exports.drawParticleShadow = exports.drawLight = exports.drawGrabLine = exports.gradient = exports.drawConnectLine = exports.drawLinkTriangle = exports.drawLinkLine = exports.clear = exports.paintBase = void 0;\nconst NumberUtils_1 = require(\"./NumberUtils\");\nconst ColorUtils_1 = require(\"./ColorUtils\");\nfunction drawLine(context, begin, end) {\n    context.beginPath();\n    context.moveTo(begin.x, begin.y);\n    context.lineTo(end.x, end.y);\n    context.closePath();\n}\nfunction drawTriangle(context, p1, p2, p3) {\n    context.beginPath();\n    context.moveTo(p1.x, p1.y);\n    context.lineTo(p2.x, p2.y);\n    context.lineTo(p3.x, p3.y);\n    context.closePath();\n}\nfunction paintBase(context, dimension, baseColor) {\n    context.save();\n    context.fillStyle = baseColor !== null && baseColor !== void 0 ? baseColor : \"rgba(0,0,0,0)\";\n    context.fillRect(0, 0, dimension.width, dimension.height);\n    context.restore();\n}\nexports.paintBase = paintBase;\nfunction clear(context, dimension) {\n    context.clearRect(0, 0, dimension.width, dimension.height);\n}\nexports.clear = clear;\nfunction drawLinkLine(context, width, begin, end, maxDistance, canvasSize, warp, backgroundMask, composite, colorLine, opacity, shadow) {\n    let drawn = false;\n    if (NumberUtils_1.getDistance(begin, end) <= maxDistance) {\n        drawLine(context, begin, end);\n        drawn = true;\n    }\n    else if (warp) {\n        let pi1;\n        let pi2;\n        const endNE = {\n            x: end.x - canvasSize.width,\n            y: end.y,\n        };\n        const d1 = NumberUtils_1.getDistances(begin, endNE);\n        if (d1.distance <= maxDistance) {\n            const yi = begin.y - (d1.dy / d1.dx) * begin.x;\n            pi1 = { x: 0, y: yi };\n            pi2 = { x: canvasSize.width, y: yi };\n        }\n        else {\n            const endSW = {\n                x: end.x,\n                y: end.y - canvasSize.height,\n            };\n            const d2 = NumberUtils_1.getDistances(begin, endSW);\n            if (d2.distance <= maxDistance) {\n                const yi = begin.y - (d2.dy / d2.dx) * begin.x;\n                const xi = -yi / (d2.dy / d2.dx);\n                pi1 = { x: xi, y: 0 };\n                pi2 = { x: xi, y: canvasSize.height };\n            }\n            else {\n                const endSE = {\n                    x: end.x - canvasSize.width,\n                    y: end.y - canvasSize.height,\n                };\n                const d3 = NumberUtils_1.getDistances(begin, endSE);\n                if (d3.distance <= maxDistance) {\n                    const yi = begin.y - (d3.dy / d3.dx) * begin.x;\n                    const xi = -yi / (d3.dy / d3.dx);\n                    pi1 = { x: xi, y: yi };\n                    pi2 = { x: pi1.x + canvasSize.width, y: pi1.y + canvasSize.height };\n                }\n            }\n        }\n        if (pi1 && pi2) {\n            drawLine(context, begin, pi1);\n            drawLine(context, end, pi2);\n            drawn = true;\n        }\n    }\n    if (!drawn) {\n        return;\n    }\n    context.lineWidth = width;\n    if (backgroundMask) {\n        context.globalCompositeOperation = composite;\n    }\n    context.strokeStyle = ColorUtils_1.getStyleFromRgb(colorLine, opacity);\n    if (shadow.enable) {\n        const shadowColor = ColorUtils_1.colorToRgb(shadow.color);\n        if (shadowColor) {\n            context.shadowBlur = shadow.blur;\n            context.shadowColor = ColorUtils_1.getStyleFromRgb(shadowColor);\n        }\n    }\n    context.stroke();\n}\nexports.drawLinkLine = drawLinkLine;\nfunction drawLinkTriangle(context, pos1, pos2, pos3, backgroundMask, composite, colorTriangle, opacityTriangle) {\n    drawTriangle(context, pos1, pos2, pos3);\n    if (backgroundMask) {\n        context.globalCompositeOperation = composite;\n    }\n    context.fillStyle = ColorUtils_1.getStyleFromRgb(colorTriangle, opacityTriangle);\n    context.fill();\n}\nexports.drawLinkTriangle = drawLinkTriangle;\nfunction drawConnectLine(context, width, lineStyle, begin, end) {\n    context.save();\n    drawLine(context, begin, end);\n    context.lineWidth = width;\n    context.strokeStyle = lineStyle;\n    context.stroke();\n    context.restore();\n}\nexports.drawConnectLine = drawConnectLine;\nfunction gradient(context, p1, p2, opacity) {\n    const gradStop = Math.floor(p2.getRadius() / p1.getRadius());\n    const color1 = p1.getFillColor();\n    const color2 = p2.getFillColor();\n    if (!color1 || !color2) {\n        return;\n    }\n    const sourcePos = p1.getPosition();\n    const destPos = p2.getPosition();\n    const midRgb = ColorUtils_1.colorMix(color1, color2, p1.getRadius(), p2.getRadius());\n    const grad = context.createLinearGradient(sourcePos.x, sourcePos.y, destPos.x, destPos.y);\n    grad.addColorStop(0, ColorUtils_1.getStyleFromHsl(color1, opacity));\n    grad.addColorStop(gradStop > 1 ? 1 : gradStop, ColorUtils_1.getStyleFromRgb(midRgb, opacity));\n    grad.addColorStop(1, ColorUtils_1.getStyleFromHsl(color2, opacity));\n    return grad;\n}\nexports.gradient = gradient;\nfunction drawGrabLine(context, width, begin, end, colorLine, opacity) {\n    context.save();\n    drawLine(context, begin, end);\n    context.strokeStyle = ColorUtils_1.getStyleFromRgb(colorLine, opacity);\n    context.lineWidth = width;\n    context.stroke();\n    context.restore();\n}\nexports.drawGrabLine = drawGrabLine;\nfunction drawLight(container, context, mousePos) {\n    const lightOptions = container.actualOptions.interactivity.modes.light.area;\n    context.beginPath();\n    context.arc(mousePos.x, mousePos.y, lightOptions.radius, 0, 2 * Math.PI);\n    const gradientAmbientLight = context.createRadialGradient(mousePos.x, mousePos.y, 0, mousePos.x, mousePos.y, lightOptions.radius);\n    const gradient = lightOptions.gradient;\n    const gradientRgb = {\n        start: ColorUtils_1.colorToRgb(gradient.start),\n        stop: ColorUtils_1.colorToRgb(gradient.stop),\n    };\n    if (!gradientRgb.start || !gradientRgb.stop) {\n        return;\n    }\n    gradientAmbientLight.addColorStop(0, ColorUtils_1.getStyleFromRgb(gradientRgb.start));\n    gradientAmbientLight.addColorStop(1, ColorUtils_1.getStyleFromRgb(gradientRgb.stop));\n    context.fillStyle = gradientAmbientLight;\n    context.fill();\n}\nexports.drawLight = drawLight;\nfunction drawParticleShadow(container, context, particle, mousePos) {\n    const pos = particle.getPosition();\n    const shadowOptions = container.actualOptions.interactivity.modes.light.shadow;\n    context.save();\n    const radius = particle.getRadius();\n    const sides = particle.sides;\n    const full = (Math.PI * 2) / sides;\n    const angle = -particle.rotate.value + Math.PI / 4;\n    const factor = 1;\n    const dots = [];\n    for (let i = 0; i < sides; i++) {\n        dots.push({\n            x: pos.x + radius * Math.sin(angle + full * i) * factor,\n            y: pos.y + radius * Math.cos(angle + full * i) * factor,\n        });\n    }\n    const points = [];\n    const shadowLength = shadowOptions.length;\n    for (const dot of dots) {\n        const dotAngle = Math.atan2(mousePos.y - dot.y, mousePos.x - dot.x);\n        const endX = dot.x + shadowLength * Math.sin(-dotAngle - Math.PI / 2);\n        const endY = dot.y + shadowLength * Math.cos(-dotAngle - Math.PI / 2);\n        points.push({\n            endX: endX,\n            endY: endY,\n            startX: dot.x,\n            startY: dot.y,\n        });\n    }\n    const shadowRgb = ColorUtils_1.colorToRgb(shadowOptions.color);\n    if (!shadowRgb) {\n        return;\n    }\n    const shadowColor = ColorUtils_1.getStyleFromRgb(shadowRgb);\n    for (let i = points.length - 1; i >= 0; i--) {\n        const n = i == points.length - 1 ? 0 : i + 1;\n        context.beginPath();\n        context.moveTo(points[i].startX, points[i].startY);\n        context.lineTo(points[n].startX, points[n].startY);\n        context.lineTo(points[n].endX, points[n].endY);\n        context.lineTo(points[i].endX, points[i].endY);\n        context.fillStyle = shadowColor;\n        context.fill();\n    }\n    context.restore();\n}\nexports.drawParticleShadow = drawParticleShadow;\nfunction drawParticle(container, context, particle, delta, fillColorValue, strokeColorValue, backgroundMask, composite, radius, opacity, shadow) {\n    const pos = particle.getPosition();\n    const tiltOptions = particle.options.tilt;\n    const rollOptions = particle.options.roll;\n    context.save();\n    if (tiltOptions.enable || rollOptions.enable) {\n        context.setTransform(rollOptions.enable ? Math.cos(particle.rollAngle) : 1, tiltOptions.enable ? Math.cos(particle.tilt.value) * particle.tilt.cosDirection : 0, tiltOptions.enable ? Math.sin(particle.tilt.value) * particle.tilt.sinDirection : 0, rollOptions.enable ? Math.sin(particle.rollAngle) : 1, pos.x, pos.y);\n    }\n    else {\n        context.translate(pos.x, pos.y);\n    }\n    context.beginPath();\n    const angle = particle.rotate.value + (particle.options.rotate.path ? particle.velocity.angle : 0);\n    if (angle !== 0) {\n        context.rotate(angle);\n    }\n    if (backgroundMask) {\n        context.globalCompositeOperation = composite;\n    }\n    const shadowColor = particle.shadowColor;\n    if (shadow.enable && shadowColor) {\n        context.shadowBlur = shadow.blur;\n        context.shadowColor = ColorUtils_1.getStyleFromRgb(shadowColor);\n        context.shadowOffsetX = shadow.offset.x;\n        context.shadowOffsetY = shadow.offset.y;\n    }\n    if (fillColorValue) {\n        context.fillStyle = fillColorValue;\n    }\n    const stroke = particle.stroke;\n    context.lineWidth = particle.strokeWidth;\n    if (strokeColorValue) {\n        context.strokeStyle = strokeColorValue;\n    }\n    drawShape(container, context, particle, radius, opacity, delta);\n    if (stroke.width > 0) {\n        context.stroke();\n    }\n    if (particle.close) {\n        context.closePath();\n    }\n    if (particle.fill) {\n        context.fill();\n    }\n    context.restore();\n    context.save();\n    if (tiltOptions.enable) {\n        context.setTransform(1, Math.cos(particle.tilt.value) * particle.tilt.cosDirection, Math.sin(particle.tilt.value) * particle.tilt.sinDirection, 1, pos.x, pos.y);\n    }\n    else {\n        context.translate(pos.x, pos.y);\n    }\n    if (angle !== 0) {\n        context.rotate(angle);\n    }\n    if (backgroundMask) {\n        context.globalCompositeOperation = composite;\n    }\n    drawShapeAfterEffect(container, context, particle, radius, opacity, delta);\n    context.restore();\n}\nexports.drawParticle = drawParticle;\nfunction drawShape(container, context, particle, radius, opacity, delta) {\n    if (!particle.shape) {\n        return;\n    }\n    const drawer = container.drawers.get(particle.shape);\n    if (!drawer) {\n        return;\n    }\n    drawer.draw(context, particle, radius, opacity, delta, container.retina.pixelRatio);\n}\nexports.drawShape = drawShape;\nfunction drawShapeAfterEffect(container, context, particle, radius, opacity, delta) {\n    if (!particle.shape) {\n        return;\n    }\n    const drawer = container.drawers.get(particle.shape);\n    if (!(drawer === null || drawer === void 0 ? void 0 : drawer.afterEffect)) {\n        return;\n    }\n    drawer.afterEffect(context, particle, radius, opacity, delta, container.retina.pixelRatio);\n}\nexports.drawShapeAfterEffect = drawShapeAfterEffect;\nfunction drawPlugin(context, plugin, delta) {\n    if (!plugin.draw) {\n        return;\n    }\n    context.save();\n    plugin.draw(context, delta);\n    context.restore();\n}\nexports.drawPlugin = drawPlugin;\nclass CanvasUtils {\n    static paintBase(context, dimension, baseColor) {\n        paintBase(context, dimension, baseColor);\n    }\n    static clear(context, dimension) {\n        clear(context, dimension);\n    }\n    static drawLinkLine(context, width, begin, end, maxDistance, canvasSize, warp, backgroundMask, composite, colorLine, opacity, shadow) {\n        drawLinkLine(context, width, begin, end, maxDistance, canvasSize, warp, backgroundMask, composite, colorLine, opacity, shadow);\n    }\n    static drawLinkTriangle(context, pos1, pos2, pos3, backgroundMask, composite, colorTriangle, opacityTriangle) {\n        drawLinkTriangle(context, pos1, pos2, pos3, backgroundMask, composite, colorTriangle, opacityTriangle);\n    }\n    static drawConnectLine(context, width, lineStyle, begin, end) {\n        drawConnectLine(context, width, lineStyle, begin, end);\n    }\n    static gradient(context, p1, p2, opacity) {\n        return gradient(context, p1, p2, opacity);\n    }\n    static drawGrabLine(context, width, begin, end, colorLine, opacity) {\n        drawGrabLine(context, width, begin, end, colorLine, opacity);\n    }\n    static drawLight(container, context, mousePos) {\n        drawLight(container, context, mousePos);\n    }\n    static drawParticleShadow(container, context, particle, mousePos) {\n        drawParticleShadow(container, context, particle, mousePos);\n    }\n    static drawParticle(container, context, particle, delta, fillColorValue, strokeColorValue, backgroundMask, composite, radius, opacity, shadow) {\n        drawParticle(container, context, particle, delta, fillColorValue, strokeColorValue, backgroundMask, composite, radius, opacity, shadow);\n    }\n    static drawShape(container, context, particle, radius, opacity, delta) {\n        drawShape(container, context, particle, radius, opacity, delta);\n    }\n    static drawShapeAfterEffect(container, context, particle, radius, opacity, delta) {\n        drawShapeAfterEffect(container, context, particle, radius, opacity, delta);\n    }\n    static drawPlugin(context, plugin, delta) {\n        drawPlugin(context, plugin, delta);\n    }\n}\nexports.CanvasUtils = CanvasUtils;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}