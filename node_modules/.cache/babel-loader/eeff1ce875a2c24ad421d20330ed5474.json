{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Grabber = void 0;\n\nconst Utils_1 = require(\"../../Utils\");\n\nconst Enums_1 = require(\"../../Enums\");\n\nconst ExternalInteractorBase_1 = require(\"../../Core/ExternalInteractorBase\");\n\nclass Grabber extends ExternalInteractorBase_1.ExternalInteractorBase {\n  constructor(container) {\n    super(container);\n  }\n\n  isEnabled() {\n    const container = this.container;\n    const mouse = container.interactivity.mouse;\n    const events = container.actualOptions.interactivity.events;\n\n    if (!(events.onHover.enable && mouse.position)) {\n      return false;\n    }\n\n    const hoverMode = events.onHover.mode;\n    return Utils_1.isInArray(Enums_1.HoverMode.grab, hoverMode);\n  }\n\n  reset() {}\n\n  interact() {\n    var _a;\n\n    const container = this.container;\n    const options = container.actualOptions;\n    const interactivity = options.interactivity;\n\n    if (interactivity.events.onHover.enable && container.interactivity.status === Utils_1.Constants.mouseMoveEvent) {\n      const mousePos = container.interactivity.mouse.position;\n\n      if (mousePos === undefined) {\n        return;\n      }\n\n      const distance = container.retina.grabModeDistance;\n      const query = container.particles.quadTree.queryCircle(mousePos, distance);\n\n      for (const particle of query) {\n        const pos = particle.getPosition();\n        const pointDistance = Utils_1.getDistance(pos, mousePos);\n\n        if (pointDistance <= distance) {\n          const grabLineOptions = interactivity.modes.grab.links;\n          const lineOpacity = grabLineOptions.opacity;\n          const opacityLine = lineOpacity - pointDistance * lineOpacity / distance;\n\n          if (opacityLine > 0) {\n            const optColor = (_a = grabLineOptions.color) !== null && _a !== void 0 ? _a : particle.options.links.color;\n\n            if (!container.particles.grabLineColor) {\n              const linksOptions = container.actualOptions.interactivity.modes.grab.links;\n              container.particles.grabLineColor = Utils_1.getLinkRandomColor(optColor, linksOptions.blink, linksOptions.consent);\n            }\n\n            const colorLine = Utils_1.getLinkColor(particle, undefined, container.particles.grabLineColor);\n\n            if (colorLine === undefined) {\n              return;\n            }\n\n            container.canvas.drawGrabLine(particle, colorLine, opacityLine, mousePos);\n          }\n        }\n      }\n    }\n  }\n\n}\n\nexports.Grabber = Grabber;","map":{"version":3,"names":["Object","defineProperty","exports","value","Grabber","Utils_1","require","Enums_1","ExternalInteractorBase_1","ExternalInteractorBase","constructor","container","isEnabled","mouse","interactivity","events","actualOptions","onHover","enable","position","hoverMode","mode","isInArray","HoverMode","grab","reset","interact","_a","options","status","Constants","mouseMoveEvent","mousePos","undefined","distance","retina","grabModeDistance","query","particles","quadTree","queryCircle","particle","pos","getPosition","pointDistance","getDistance","grabLineOptions","modes","links","lineOpacity","opacity","opacityLine","optColor","color","grabLineColor","linksOptions","getLinkRandomColor","blink","consent","colorLine","getLinkColor","canvas","drawGrabLine"],"sources":["/Users/raunakanand/Documents/GitHub/react-personal-website/node_modules/tsparticles/Interactions/External/Grabber.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Grabber = void 0;\nconst Utils_1 = require(\"../../Utils\");\nconst Enums_1 = require(\"../../Enums\");\nconst ExternalInteractorBase_1 = require(\"../../Core/ExternalInteractorBase\");\nclass Grabber extends ExternalInteractorBase_1.ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    isEnabled() {\n        const container = this.container;\n        const mouse = container.interactivity.mouse;\n        const events = container.actualOptions.interactivity.events;\n        if (!(events.onHover.enable && mouse.position)) {\n            return false;\n        }\n        const hoverMode = events.onHover.mode;\n        return Utils_1.isInArray(Enums_1.HoverMode.grab, hoverMode);\n    }\n    reset() {\n    }\n    interact() {\n        var _a;\n        const container = this.container;\n        const options = container.actualOptions;\n        const interactivity = options.interactivity;\n        if (interactivity.events.onHover.enable && container.interactivity.status === Utils_1.Constants.mouseMoveEvent) {\n            const mousePos = container.interactivity.mouse.position;\n            if (mousePos === undefined) {\n                return;\n            }\n            const distance = container.retina.grabModeDistance;\n            const query = container.particles.quadTree.queryCircle(mousePos, distance);\n            for (const particle of query) {\n                const pos = particle.getPosition();\n                const pointDistance = Utils_1.getDistance(pos, mousePos);\n                if (pointDistance <= distance) {\n                    const grabLineOptions = interactivity.modes.grab.links;\n                    const lineOpacity = grabLineOptions.opacity;\n                    const opacityLine = lineOpacity - (pointDistance * lineOpacity) / distance;\n                    if (opacityLine > 0) {\n                        const optColor = (_a = grabLineOptions.color) !== null && _a !== void 0 ? _a : particle.options.links.color;\n                        if (!container.particles.grabLineColor) {\n                            const linksOptions = container.actualOptions.interactivity.modes.grab.links;\n                            container.particles.grabLineColor = Utils_1.getLinkRandomColor(optColor, linksOptions.blink, linksOptions.consent);\n                        }\n                        const colorLine = Utils_1.getLinkColor(particle, undefined, container.particles.grabLineColor);\n                        if (colorLine === undefined) {\n                            return;\n                        }\n                        container.canvas.drawGrabLine(particle, colorLine, opacityLine, mousePos);\n                    }\n                }\n            }\n        }\n    }\n}\nexports.Grabber = Grabber;\n"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AACA,MAAMC,OAAO,GAAGC,OAAO,CAAC,aAAD,CAAvB;;AACA,MAAMC,OAAO,GAAGD,OAAO,CAAC,aAAD,CAAvB;;AACA,MAAME,wBAAwB,GAAGF,OAAO,CAAC,mCAAD,CAAxC;;AACA,MAAMF,OAAN,SAAsBI,wBAAwB,CAACC,sBAA/C,CAAsE;EAClEC,WAAW,CAACC,SAAD,EAAY;IACnB,MAAMA,SAAN;EACH;;EACDC,SAAS,GAAG;IACR,MAAMD,SAAS,GAAG,KAAKA,SAAvB;IACA,MAAME,KAAK,GAAGF,SAAS,CAACG,aAAV,CAAwBD,KAAtC;IACA,MAAME,MAAM,GAAGJ,SAAS,CAACK,aAAV,CAAwBF,aAAxB,CAAsCC,MAArD;;IACA,IAAI,EAAEA,MAAM,CAACE,OAAP,CAAeC,MAAf,IAAyBL,KAAK,CAACM,QAAjC,CAAJ,EAAgD;MAC5C,OAAO,KAAP;IACH;;IACD,MAAMC,SAAS,GAAGL,MAAM,CAACE,OAAP,CAAeI,IAAjC;IACA,OAAOhB,OAAO,CAACiB,SAAR,CAAkBf,OAAO,CAACgB,SAAR,CAAkBC,IAApC,EAA0CJ,SAA1C,CAAP;EACH;;EACDK,KAAK,GAAG,CACP;;EACDC,QAAQ,GAAG;IACP,IAAIC,EAAJ;;IACA,MAAMhB,SAAS,GAAG,KAAKA,SAAvB;IACA,MAAMiB,OAAO,GAAGjB,SAAS,CAACK,aAA1B;IACA,MAAMF,aAAa,GAAGc,OAAO,CAACd,aAA9B;;IACA,IAAIA,aAAa,CAACC,MAAd,CAAqBE,OAArB,CAA6BC,MAA7B,IAAuCP,SAAS,CAACG,aAAV,CAAwBe,MAAxB,KAAmCxB,OAAO,CAACyB,SAAR,CAAkBC,cAAhG,EAAgH;MAC5G,MAAMC,QAAQ,GAAGrB,SAAS,CAACG,aAAV,CAAwBD,KAAxB,CAA8BM,QAA/C;;MACA,IAAIa,QAAQ,KAAKC,SAAjB,EAA4B;QACxB;MACH;;MACD,MAAMC,QAAQ,GAAGvB,SAAS,CAACwB,MAAV,CAAiBC,gBAAlC;MACA,MAAMC,KAAK,GAAG1B,SAAS,CAAC2B,SAAV,CAAoBC,QAApB,CAA6BC,WAA7B,CAAyCR,QAAzC,EAAmDE,QAAnD,CAAd;;MACA,KAAK,MAAMO,QAAX,IAAuBJ,KAAvB,EAA8B;QAC1B,MAAMK,GAAG,GAAGD,QAAQ,CAACE,WAAT,EAAZ;QACA,MAAMC,aAAa,GAAGvC,OAAO,CAACwC,WAAR,CAAoBH,GAApB,EAAyBV,QAAzB,CAAtB;;QACA,IAAIY,aAAa,IAAIV,QAArB,EAA+B;UAC3B,MAAMY,eAAe,GAAGhC,aAAa,CAACiC,KAAd,CAAoBvB,IAApB,CAAyBwB,KAAjD;UACA,MAAMC,WAAW,GAAGH,eAAe,CAACI,OAApC;UACA,MAAMC,WAAW,GAAGF,WAAW,GAAIL,aAAa,GAAGK,WAAjB,GAAgCf,QAAlE;;UACA,IAAIiB,WAAW,GAAG,CAAlB,EAAqB;YACjB,MAAMC,QAAQ,GAAG,CAACzB,EAAE,GAAGmB,eAAe,CAACO,KAAtB,MAAiC,IAAjC,IAAyC1B,EAAE,KAAK,KAAK,CAArD,GAAyDA,EAAzD,GAA8Dc,QAAQ,CAACb,OAAT,CAAiBoB,KAAjB,CAAuBK,KAAtG;;YACA,IAAI,CAAC1C,SAAS,CAAC2B,SAAV,CAAoBgB,aAAzB,EAAwC;cACpC,MAAMC,YAAY,GAAG5C,SAAS,CAACK,aAAV,CAAwBF,aAAxB,CAAsCiC,KAAtC,CAA4CvB,IAA5C,CAAiDwB,KAAtE;cACArC,SAAS,CAAC2B,SAAV,CAAoBgB,aAApB,GAAoCjD,OAAO,CAACmD,kBAAR,CAA2BJ,QAA3B,EAAqCG,YAAY,CAACE,KAAlD,EAAyDF,YAAY,CAACG,OAAtE,CAApC;YACH;;YACD,MAAMC,SAAS,GAAGtD,OAAO,CAACuD,YAAR,CAAqBnB,QAArB,EAA+BR,SAA/B,EAA0CtB,SAAS,CAAC2B,SAAV,CAAoBgB,aAA9D,CAAlB;;YACA,IAAIK,SAAS,KAAK1B,SAAlB,EAA6B;cACzB;YACH;;YACDtB,SAAS,CAACkD,MAAV,CAAiBC,YAAjB,CAA8BrB,QAA9B,EAAwCkB,SAAxC,EAAmDR,WAAnD,EAAgEnB,QAAhE;UACH;QACJ;MACJ;IACJ;EACJ;;AAlDiE;;AAoDtE9B,OAAO,CAACE,OAAR,GAAkBA,OAAlB"},"metadata":{},"sourceType":"script"}