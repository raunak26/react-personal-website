{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Infecter = void 0;\n\nclass Infecter {\n  constructor(container) {\n    this.container = container;\n  }\n\n  startInfection(particle, stage) {\n    const options = this.container.actualOptions,\n          stages = options.infection.stages,\n          stagesCount = stages.length;\n\n    if (stage > stagesCount || stage < 0) {\n      return;\n    }\n\n    particle.infection.delay = 0;\n    particle.infection.delayStage = stage;\n  }\n\n  updateInfectionStage(particle, stage) {\n    const options = this.container.actualOptions,\n          stagesCount = options.infection.stages.length;\n\n    if (stage > stagesCount || stage < 0 || particle.infection.stage !== undefined && particle.infection.stage > stage) {\n      return;\n    }\n\n    particle.infection.stage = stage;\n    particle.infection.time = 0;\n  }\n\n  updateInfection(particle, delta) {\n    const options = this.container.actualOptions,\n          infection = options.infection,\n          stages = options.infection.stages,\n          stagesCount = stages.length;\n\n    if (particle.infection.delay !== undefined && particle.infection.delayStage !== undefined) {\n      const stage = particle.infection.delayStage;\n\n      if (stage > stagesCount || stage < 0) {\n        return;\n      }\n\n      if (particle.infection.delay >= infection.delay * 1000) {\n        particle.infection.stage = stage;\n        particle.infection.time = 0;\n        delete particle.infection.delay;\n        delete particle.infection.delayStage;\n      } else {\n        particle.infection.delay += delta;\n      }\n    } else {\n      delete particle.infection.delay;\n      delete particle.infection.delayStage;\n    }\n\n    if (particle.infection.stage !== undefined && particle.infection.time !== undefined) {\n      const infectionStage = stages[particle.infection.stage];\n\n      if (infectionStage.duration !== undefined && infectionStage.duration >= 0) {\n        if (particle.infection.time > infectionStage.duration * 1000) {\n          this.nextInfectionStage(particle);\n        } else {\n          particle.infection.time += delta;\n        }\n      } else {\n        particle.infection.time += delta;\n      }\n    } else {\n      delete particle.infection.stage;\n      delete particle.infection.time;\n    }\n  }\n\n  nextInfectionStage(particle) {\n    const options = this.container.actualOptions,\n          stagesCount = options.infection.stages.length;\n\n    if (stagesCount <= 0 || particle.infection.stage === undefined) {\n      return;\n    }\n\n    particle.infection.time = 0;\n\n    if (stagesCount <= ++particle.infection.stage) {\n      if (options.infection.cure) {\n        delete particle.infection.stage;\n        delete particle.infection.time;\n        return;\n      } else {\n        particle.infection.stage = 0;\n        particle.infection.time = 0;\n      }\n    }\n  }\n\n}\n\nexports.Infecter = Infecter;","map":{"version":3,"names":["Object","defineProperty","exports","value","Infecter","constructor","container","startInfection","particle","stage","options","actualOptions","stages","infection","stagesCount","length","delay","delayStage","updateInfectionStage","undefined","time","updateInfection","delta","infectionStage","duration","nextInfectionStage","cure"],"sources":["/Users/raunakanand/Documents/GitHub/react-personal-website/node_modules/tsparticles/Plugins/Infection/Infecter.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Infecter = void 0;\nclass Infecter {\n    constructor(container) {\n        this.container = container;\n    }\n    startInfection(particle, stage) {\n        const options = this.container.actualOptions, stages = options.infection.stages, stagesCount = stages.length;\n        if (stage > stagesCount || stage < 0) {\n            return;\n        }\n        particle.infection.delay = 0;\n        particle.infection.delayStage = stage;\n    }\n    updateInfectionStage(particle, stage) {\n        const options = this.container.actualOptions, stagesCount = options.infection.stages.length;\n        if (stage > stagesCount ||\n            stage < 0 ||\n            (particle.infection.stage !== undefined && particle.infection.stage > stage)) {\n            return;\n        }\n        particle.infection.stage = stage;\n        particle.infection.time = 0;\n    }\n    updateInfection(particle, delta) {\n        const options = this.container.actualOptions, infection = options.infection, stages = options.infection.stages, stagesCount = stages.length;\n        if (particle.infection.delay !== undefined && particle.infection.delayStage !== undefined) {\n            const stage = particle.infection.delayStage;\n            if (stage > stagesCount || stage < 0) {\n                return;\n            }\n            if (particle.infection.delay >= infection.delay * 1000) {\n                particle.infection.stage = stage;\n                particle.infection.time = 0;\n                delete particle.infection.delay;\n                delete particle.infection.delayStage;\n            }\n            else {\n                particle.infection.delay += delta;\n            }\n        }\n        else {\n            delete particle.infection.delay;\n            delete particle.infection.delayStage;\n        }\n        if (particle.infection.stage !== undefined && particle.infection.time !== undefined) {\n            const infectionStage = stages[particle.infection.stage];\n            if (infectionStage.duration !== undefined && infectionStage.duration >= 0) {\n                if (particle.infection.time > infectionStage.duration * 1000) {\n                    this.nextInfectionStage(particle);\n                }\n                else {\n                    particle.infection.time += delta;\n                }\n            }\n            else {\n                particle.infection.time += delta;\n            }\n        }\n        else {\n            delete particle.infection.stage;\n            delete particle.infection.time;\n        }\n    }\n    nextInfectionStage(particle) {\n        const options = this.container.actualOptions, stagesCount = options.infection.stages.length;\n        if (stagesCount <= 0 || particle.infection.stage === undefined) {\n            return;\n        }\n        particle.infection.time = 0;\n        if (stagesCount <= ++particle.infection.stage) {\n            if (options.infection.cure) {\n                delete particle.infection.stage;\n                delete particle.infection.time;\n                return;\n            }\n            else {\n                particle.infection.stage = 0;\n                particle.infection.time = 0;\n            }\n        }\n    }\n}\nexports.Infecter = Infecter;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}