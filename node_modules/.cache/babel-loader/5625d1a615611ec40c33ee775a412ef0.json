{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Mover = void 0;\n\nconst Utils_1 = require(\"../../Utils\");\n\nconst Enums_1 = require(\"../../Enums\");\n\nfunction applyDistance(particle) {\n  const initialPosition = particle.initialPosition;\n  const {\n    dx,\n    dy\n  } = Utils_1.getDistances(initialPosition, particle.position);\n  const dxFixed = Math.abs(dx),\n        dyFixed = Math.abs(dy);\n  const hDistance = particle.maxDistance.horizontal;\n  const vDistance = particle.maxDistance.vertical;\n\n  if (!hDistance && !vDistance) {\n    return;\n  }\n\n  if ((hDistance && dxFixed >= hDistance || vDistance && dyFixed >= vDistance) && !particle.misplaced) {\n    particle.misplaced = !!hDistance && dxFixed > hDistance || !!vDistance && dyFixed > vDistance;\n\n    if (hDistance) {\n      particle.velocity.x = particle.velocity.y / 2 - particle.velocity.x;\n    }\n\n    if (vDistance) {\n      particle.velocity.y = particle.velocity.x / 2 - particle.velocity.y;\n    }\n  } else if ((!hDistance || dxFixed < hDistance) && (!vDistance || dyFixed < vDistance) && particle.misplaced) {\n    particle.misplaced = false;\n  } else if (particle.misplaced) {\n    const pos = particle.position,\n          vel = particle.velocity;\n\n    if (hDistance && (pos.x < initialPosition.x && vel.x < 0 || pos.x > initialPosition.x && vel.x > 0)) {\n      vel.x *= -Math.random();\n    }\n\n    if (vDistance && (pos.y < initialPosition.y && vel.y < 0 || pos.y > initialPosition.y && vel.y > 0)) {\n      vel.y *= -Math.random();\n    }\n  }\n}\n\nclass Mover {\n  constructor(container, particle) {\n    this.container = container;\n    this.particle = particle;\n  }\n\n  move(delta) {\n    const particle = this.particle;\n    particle.bubble.inRange = false;\n    particle.links = [];\n\n    for (const [, plugin] of this.container.plugins) {\n      if (particle.destroyed) {\n        break;\n      }\n\n      if (plugin.particleUpdate) {\n        plugin.particleUpdate(particle, delta);\n      }\n    }\n\n    if (particle.destroyed) {\n      return;\n    }\n\n    this.moveParticle(delta);\n    this.moveParallax();\n  }\n\n  moveParticle(delta) {\n    var _a, _b, _c;\n\n    const particle = this.particle;\n    const particlesOptions = particle.options;\n\n    if (!particlesOptions.move.enable) {\n      return;\n    }\n\n    const container = this.container;\n    const slowFactor = this.getProximitySpeedFactor();\n    const baseSpeed = ((_a = particle.moveSpeed) !== null && _a !== void 0 ? _a : Utils_1.getRangeValue(particle.options.move.speed) * container.retina.pixelRatio) * container.retina.reduceFactor;\n    const maxSize = Utils_1.getRangeMax(particle.options.size.value) * container.retina.pixelRatio;\n    const sizeFactor = particlesOptions.move.size ? particle.getRadius() / maxSize : 1;\n    const moveSpeed = baseSpeed / 2 * sizeFactor * slowFactor * delta.factor;\n    const moveDrift = (_b = particle.moveDrift) !== null && _b !== void 0 ? _b : Utils_1.getRangeValue(particle.options.move.drift) * container.retina.pixelRatio;\n    this.applyPath(delta);\n    const gravityOptions = particlesOptions.move.gravity;\n    const gravityFactor = gravityOptions.enable && gravityOptions.inverse ? -1 : 1;\n\n    if (gravityOptions.enable) {\n      particle.velocity.y += gravityFactor * (gravityOptions.acceleration * delta.factor) / (60 * moveSpeed);\n    }\n\n    if (moveSpeed) {\n      particle.velocity.x += moveDrift * delta.factor / (60 * moveSpeed);\n    }\n\n    particle.velocity.multTo(1 - particle.options.move.decay);\n    const velocity = particle.velocity.mult(moveSpeed);\n    const maxSpeed = (_c = particle.maxSpeed) !== null && _c !== void 0 ? _c : container.retina.maxSpeed;\n\n    if (gravityOptions.enable && (!gravityOptions.inverse && velocity.y >= 0 && velocity.y >= maxSpeed || gravityOptions.inverse && velocity.y <= 0 && velocity.y <= -maxSpeed) && gravityOptions.maxSpeed > 0) {\n      velocity.y = gravityFactor * maxSpeed;\n\n      if (moveSpeed) {\n        particle.velocity.y = velocity.y / moveSpeed;\n      }\n    }\n\n    const zIndexOptions = particle.options.zIndex,\n          zVelocityFactor = 1 - zIndexOptions.velocityRate * particle.zIndexFactor;\n    velocity.multTo(zVelocityFactor);\n    particle.position.addTo(velocity);\n\n    if (particlesOptions.move.vibrate) {\n      particle.position.x += Math.sin(particle.position.x * Math.cos(particle.position.y));\n      particle.position.y += Math.cos(particle.position.y * Math.sin(particle.position.x));\n    }\n\n    const initialPosition = particle.initialPosition;\n    const initialDistance = Utils_1.getDistance(initialPosition, particle.position);\n\n    if (particle.maxDistance) {\n      if (initialDistance >= particle.maxDistance && !particle.misplaced) {\n        particle.misplaced = initialDistance > particle.maxDistance;\n        particle.velocity.x = particle.velocity.y / 2 - particle.velocity.x;\n        particle.velocity.y = particle.velocity.x / 2 - particle.velocity.y;\n      } else if (initialDistance < particle.maxDistance && particle.misplaced) {\n        particle.misplaced = false;\n      } else if (particle.misplaced) {\n        if (particle.position.x < initialPosition.x && particle.velocity.x < 0 || particle.position.x > initialPosition.x && particle.velocity.x > 0) {\n          particle.velocity.x *= -Math.random();\n        }\n\n        if (particle.position.y < initialPosition.y && particle.velocity.y < 0 || particle.position.y > initialPosition.y && particle.velocity.y > 0) {\n          particle.velocity.y *= -Math.random();\n        }\n      }\n    }\n\n    applyDistance(particle);\n  }\n\n  applyPath(delta) {\n    const particle = this.particle;\n    const particlesOptions = particle.options;\n    const pathOptions = particlesOptions.move.path;\n    const pathEnabled = pathOptions.enable;\n\n    if (!pathEnabled) {\n      return;\n    }\n\n    const container = this.container;\n\n    if (particle.lastPathTime <= particle.pathDelay) {\n      particle.lastPathTime += delta.value;\n      return;\n    }\n\n    let generator = container.pathGenerator;\n\n    if (pathOptions.generator) {\n      const customGenerator = Utils_1.Plugins.getPathGenerator(pathOptions.generator);\n\n      if (customGenerator) {\n        generator = customGenerator;\n      }\n    }\n\n    const path = generator.generate(particle);\n    particle.velocity.addTo(path);\n\n    if (pathOptions.clamp) {\n      particle.velocity.x = Utils_1.clamp(particle.velocity.x, -1, 1);\n      particle.velocity.y = Utils_1.clamp(particle.velocity.y, -1, 1);\n    }\n\n    particle.lastPathTime -= particle.pathDelay;\n  }\n\n  moveParallax() {\n    const container = this.container;\n    const options = container.actualOptions;\n\n    if (Utils_1.isSsr() || !options.interactivity.events.onHover.parallax.enable) {\n      return;\n    }\n\n    const particle = this.particle;\n    const parallaxForce = options.interactivity.events.onHover.parallax.force;\n    const mousePos = container.interactivity.mouse.position;\n\n    if (!mousePos) {\n      return;\n    }\n\n    const canvasCenter = {\n      x: container.canvas.size.width / 2,\n      y: container.canvas.size.height / 2\n    };\n    const parallaxSmooth = options.interactivity.events.onHover.parallax.smooth;\n    const factor = particle.getRadius() / parallaxForce;\n    const tmp = {\n      x: (mousePos.x - canvasCenter.x) * factor,\n      y: (mousePos.y - canvasCenter.y) * factor\n    };\n    particle.offset.x += (tmp.x - particle.offset.x) / parallaxSmooth;\n    particle.offset.y += (tmp.y - particle.offset.y) / parallaxSmooth;\n  }\n\n  getProximitySpeedFactor() {\n    const container = this.container;\n    const options = container.actualOptions;\n    const active = Utils_1.isInArray(Enums_1.HoverMode.slow, options.interactivity.events.onHover.mode);\n\n    if (!active) {\n      return 1;\n    }\n\n    const mousePos = this.container.interactivity.mouse.position;\n\n    if (!mousePos) {\n      return 1;\n    }\n\n    const particlePos = this.particle.getPosition();\n    const dist = Utils_1.getDistance(mousePos, particlePos);\n    const radius = container.retina.slowModeRadius;\n\n    if (dist > radius) {\n      return 1;\n    }\n\n    const proximityFactor = dist / radius || 0;\n    const slowFactor = options.interactivity.modes.slow.factor;\n    return proximityFactor / slowFactor;\n  }\n\n}\n\nexports.Mover = Mover;","map":{"version":3,"names":["Object","defineProperty","exports","value","Mover","Utils_1","require","Enums_1","applyDistance","particle","initialPosition","dx","dy","getDistances","position","dxFixed","Math","abs","dyFixed","hDistance","maxDistance","horizontal","vDistance","vertical","misplaced","velocity","x","y","pos","vel","random","constructor","container","move","delta","bubble","inRange","links","plugin","plugins","destroyed","particleUpdate","moveParticle","moveParallax","_a","_b","_c","particlesOptions","options","enable","slowFactor","getProximitySpeedFactor","baseSpeed","moveSpeed","getRangeValue","speed","retina","pixelRatio","reduceFactor","maxSize","getRangeMax","size","sizeFactor","getRadius","factor","moveDrift","drift","applyPath","gravityOptions","gravity","gravityFactor","inverse","acceleration","multTo","decay","mult","maxSpeed","zIndexOptions","zIndex","zVelocityFactor","velocityRate","zIndexFactor","addTo","vibrate","sin","cos","initialDistance","getDistance","pathOptions","path","pathEnabled","lastPathTime","pathDelay","generator","pathGenerator","customGenerator","Plugins","getPathGenerator","generate","clamp","actualOptions","isSsr","interactivity","events","onHover","parallax","parallaxForce","force","mousePos","mouse","canvasCenter","canvas","width","height","parallaxSmooth","smooth","tmp","offset","active","isInArray","HoverMode","slow","mode","particlePos","getPosition","dist","radius","slowModeRadius","proximityFactor","modes"],"sources":["/Users/raunakanand/Documents/GitHub/react-personal-website/node_modules/tsparticles/Core/Particle/Mover.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Mover = void 0;\nconst Utils_1 = require(\"../../Utils\");\nconst Enums_1 = require(\"../../Enums\");\nfunction applyDistance(particle) {\n    const initialPosition = particle.initialPosition;\n    const { dx, dy } = Utils_1.getDistances(initialPosition, particle.position);\n    const dxFixed = Math.abs(dx), dyFixed = Math.abs(dy);\n    const hDistance = particle.maxDistance.horizontal;\n    const vDistance = particle.maxDistance.vertical;\n    if (!hDistance && !vDistance) {\n        return;\n    }\n    if (((hDistance && dxFixed >= hDistance) || (vDistance && dyFixed >= vDistance)) && !particle.misplaced) {\n        particle.misplaced = (!!hDistance && dxFixed > hDistance) || (!!vDistance && dyFixed > vDistance);\n        if (hDistance) {\n            particle.velocity.x = particle.velocity.y / 2 - particle.velocity.x;\n        }\n        if (vDistance) {\n            particle.velocity.y = particle.velocity.x / 2 - particle.velocity.y;\n        }\n    }\n    else if ((!hDistance || dxFixed < hDistance) && (!vDistance || dyFixed < vDistance) && particle.misplaced) {\n        particle.misplaced = false;\n    }\n    else if (particle.misplaced) {\n        const pos = particle.position, vel = particle.velocity;\n        if (hDistance && ((pos.x < initialPosition.x && vel.x < 0) || (pos.x > initialPosition.x && vel.x > 0))) {\n            vel.x *= -Math.random();\n        }\n        if (vDistance && ((pos.y < initialPosition.y && vel.y < 0) || (pos.y > initialPosition.y && vel.y > 0))) {\n            vel.y *= -Math.random();\n        }\n    }\n}\nclass Mover {\n    constructor(container, particle) {\n        this.container = container;\n        this.particle = particle;\n    }\n    move(delta) {\n        const particle = this.particle;\n        particle.bubble.inRange = false;\n        particle.links = [];\n        for (const [, plugin] of this.container.plugins) {\n            if (particle.destroyed) {\n                break;\n            }\n            if (plugin.particleUpdate) {\n                plugin.particleUpdate(particle, delta);\n            }\n        }\n        if (particle.destroyed) {\n            return;\n        }\n        this.moveParticle(delta);\n        this.moveParallax();\n    }\n    moveParticle(delta) {\n        var _a, _b, _c;\n        const particle = this.particle;\n        const particlesOptions = particle.options;\n        if (!particlesOptions.move.enable) {\n            return;\n        }\n        const container = this.container;\n        const slowFactor = this.getProximitySpeedFactor();\n        const baseSpeed = ((_a = particle.moveSpeed) !== null && _a !== void 0 ? _a : Utils_1.getRangeValue(particle.options.move.speed) * container.retina.pixelRatio) *\n            container.retina.reduceFactor;\n        const maxSize = Utils_1.getRangeMax(particle.options.size.value) * container.retina.pixelRatio;\n        const sizeFactor = particlesOptions.move.size ? particle.getRadius() / maxSize : 1;\n        const moveSpeed = (baseSpeed / 2) * sizeFactor * slowFactor * delta.factor;\n        const moveDrift = (_b = particle.moveDrift) !== null && _b !== void 0 ? _b : Utils_1.getRangeValue(particle.options.move.drift) * container.retina.pixelRatio;\n        this.applyPath(delta);\n        const gravityOptions = particlesOptions.move.gravity;\n        const gravityFactor = gravityOptions.enable && gravityOptions.inverse ? -1 : 1;\n        if (gravityOptions.enable) {\n            particle.velocity.y += (gravityFactor * (gravityOptions.acceleration * delta.factor)) / (60 * moveSpeed);\n        }\n        if (moveSpeed) {\n            particle.velocity.x += (moveDrift * delta.factor) / (60 * moveSpeed);\n        }\n        particle.velocity.multTo(1 - particle.options.move.decay);\n        const velocity = particle.velocity.mult(moveSpeed);\n        const maxSpeed = (_c = particle.maxSpeed) !== null && _c !== void 0 ? _c : container.retina.maxSpeed;\n        if (gravityOptions.enable &&\n            ((!gravityOptions.inverse && velocity.y >= 0 && velocity.y >= maxSpeed) ||\n                (gravityOptions.inverse && velocity.y <= 0 && velocity.y <= -maxSpeed)) &&\n            gravityOptions.maxSpeed > 0) {\n            velocity.y = gravityFactor * maxSpeed;\n            if (moveSpeed) {\n                particle.velocity.y = velocity.y / moveSpeed;\n            }\n        }\n        const zIndexOptions = particle.options.zIndex, zVelocityFactor = 1 - zIndexOptions.velocityRate * particle.zIndexFactor;\n        velocity.multTo(zVelocityFactor);\n        particle.position.addTo(velocity);\n        if (particlesOptions.move.vibrate) {\n            particle.position.x += Math.sin(particle.position.x * Math.cos(particle.position.y));\n            particle.position.y += Math.cos(particle.position.y * Math.sin(particle.position.x));\n        }\n        const initialPosition = particle.initialPosition;\n        const initialDistance = Utils_1.getDistance(initialPosition, particle.position);\n        if (particle.maxDistance) {\n            if (initialDistance >= particle.maxDistance && !particle.misplaced) {\n                particle.misplaced = initialDistance > particle.maxDistance;\n                particle.velocity.x = particle.velocity.y / 2 - particle.velocity.x;\n                particle.velocity.y = particle.velocity.x / 2 - particle.velocity.y;\n            }\n            else if (initialDistance < particle.maxDistance && particle.misplaced) {\n                particle.misplaced = false;\n            }\n            else if (particle.misplaced) {\n                if ((particle.position.x < initialPosition.x && particle.velocity.x < 0) ||\n                    (particle.position.x > initialPosition.x && particle.velocity.x > 0)) {\n                    particle.velocity.x *= -Math.random();\n                }\n                if ((particle.position.y < initialPosition.y && particle.velocity.y < 0) ||\n                    (particle.position.y > initialPosition.y && particle.velocity.y > 0)) {\n                    particle.velocity.y *= -Math.random();\n                }\n            }\n        }\n        applyDistance(particle);\n    }\n    applyPath(delta) {\n        const particle = this.particle;\n        const particlesOptions = particle.options;\n        const pathOptions = particlesOptions.move.path;\n        const pathEnabled = pathOptions.enable;\n        if (!pathEnabled) {\n            return;\n        }\n        const container = this.container;\n        if (particle.lastPathTime <= particle.pathDelay) {\n            particle.lastPathTime += delta.value;\n            return;\n        }\n        let generator = container.pathGenerator;\n        if (pathOptions.generator) {\n            const customGenerator = Utils_1.Plugins.getPathGenerator(pathOptions.generator);\n            if (customGenerator) {\n                generator = customGenerator;\n            }\n        }\n        const path = generator.generate(particle);\n        particle.velocity.addTo(path);\n        if (pathOptions.clamp) {\n            particle.velocity.x = Utils_1.clamp(particle.velocity.x, -1, 1);\n            particle.velocity.y = Utils_1.clamp(particle.velocity.y, -1, 1);\n        }\n        particle.lastPathTime -= particle.pathDelay;\n    }\n    moveParallax() {\n        const container = this.container;\n        const options = container.actualOptions;\n        if (Utils_1.isSsr() || !options.interactivity.events.onHover.parallax.enable) {\n            return;\n        }\n        const particle = this.particle;\n        const parallaxForce = options.interactivity.events.onHover.parallax.force;\n        const mousePos = container.interactivity.mouse.position;\n        if (!mousePos) {\n            return;\n        }\n        const canvasCenter = {\n            x: container.canvas.size.width / 2,\n            y: container.canvas.size.height / 2,\n        };\n        const parallaxSmooth = options.interactivity.events.onHover.parallax.smooth;\n        const factor = particle.getRadius() / parallaxForce;\n        const tmp = {\n            x: (mousePos.x - canvasCenter.x) * factor,\n            y: (mousePos.y - canvasCenter.y) * factor,\n        };\n        particle.offset.x += (tmp.x - particle.offset.x) / parallaxSmooth;\n        particle.offset.y += (tmp.y - particle.offset.y) / parallaxSmooth;\n    }\n    getProximitySpeedFactor() {\n        const container = this.container;\n        const options = container.actualOptions;\n        const active = Utils_1.isInArray(Enums_1.HoverMode.slow, options.interactivity.events.onHover.mode);\n        if (!active) {\n            return 1;\n        }\n        const mousePos = this.container.interactivity.mouse.position;\n        if (!mousePos) {\n            return 1;\n        }\n        const particlePos = this.particle.getPosition();\n        const dist = Utils_1.getDistance(mousePos, particlePos);\n        const radius = container.retina.slowModeRadius;\n        if (dist > radius) {\n            return 1;\n        }\n        const proximityFactor = dist / radius || 0;\n        const slowFactor = options.interactivity.modes.slow.factor;\n        return proximityFactor / slowFactor;\n    }\n}\nexports.Mover = Mover;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}