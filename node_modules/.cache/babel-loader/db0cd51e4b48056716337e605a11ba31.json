{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AbsorberInstance = void 0;\n\nconst Utils_1 = require(\"../../Utils\");\n\nconst Vector_1 = require(\"../../Core/Particle/Vector\");\n\nclass AbsorberInstance {\n  constructor(absorbers, container, options, position) {\n    var _a, _b, _c;\n\n    this.absorbers = absorbers;\n    this.container = container;\n    this.initialPosition = position ? Vector_1.Vector.create(position.x, position.y) : undefined;\n    this.options = options;\n    this.dragging = false;\n    this.name = this.options.name;\n    this.opacity = this.options.opacity;\n    this.size = Utils_1.getValue(options.size) * container.retina.pixelRatio;\n    this.mass = this.size * options.size.density * container.retina.reduceFactor;\n    const limit = options.size.limit;\n    this.limit = limit !== undefined ? limit * container.retina.pixelRatio * container.retina.reduceFactor : limit;\n    const color = typeof options.color === \"string\" ? {\n      value: options.color\n    } : options.color;\n    this.color = (_a = Utils_1.colorToRgb(color)) !== null && _a !== void 0 ? _a : {\n      b: 0,\n      g: 0,\n      r: 0\n    };\n    this.position = (_c = (_b = this.initialPosition) === null || _b === void 0 ? void 0 : _b.copy()) !== null && _c !== void 0 ? _c : this.calcPosition();\n  }\n\n  attract(particle) {\n    const options = this.options;\n\n    if (options.draggable) {\n      const mouse = this.container.interactivity.mouse;\n\n      if (mouse.clicking && mouse.downPosition) {\n        const mouseDist = Utils_1.getDistance(this.position, mouse.downPosition);\n\n        if (mouseDist <= this.size) {\n          this.dragging = true;\n        }\n      } else {\n        this.dragging = false;\n      }\n\n      if (this.dragging && mouse.position) {\n        this.position.x = mouse.position.x;\n        this.position.y = mouse.position.y;\n      }\n    }\n\n    const pos = particle.getPosition();\n    const {\n      dx,\n      dy,\n      distance\n    } = Utils_1.getDistances(this.position, pos);\n    const v = Vector_1.Vector.create(dx, dy);\n    v.length = this.mass / Math.pow(distance, 2) * this.container.retina.reduceFactor;\n\n    if (distance < this.size + particle.getRadius()) {\n      const sizeFactor = particle.getRadius() * 0.033 * this.container.retina.pixelRatio;\n\n      if (this.size > particle.getRadius() && distance < this.size - particle.getRadius()) {\n        if (options.destroy) {\n          particle.destroy();\n        } else {\n          particle.needsNewPosition = true;\n          this.updateParticlePosition(particle, v);\n        }\n      } else {\n        if (options.destroy) {\n          particle.size.value -= sizeFactor;\n        }\n\n        this.updateParticlePosition(particle, v);\n      }\n\n      if (this.limit === undefined || this.size < this.limit) {\n        this.size += sizeFactor;\n      }\n\n      this.mass += sizeFactor * this.options.size.density * this.container.retina.reduceFactor;\n    } else {\n      this.updateParticlePosition(particle, v);\n    }\n  }\n\n  resize() {\n    const initialPosition = this.initialPosition;\n    this.position = initialPosition && Utils_1.isPointInside(initialPosition, this.container.canvas.size) ? initialPosition : this.calcPosition();\n  }\n\n  draw(context) {\n    context.translate(this.position.x, this.position.y);\n    context.beginPath();\n    context.arc(0, 0, this.size, 0, Math.PI * 2, false);\n    context.closePath();\n    context.fillStyle = Utils_1.getStyleFromRgb(this.color, this.opacity);\n    context.fill();\n  }\n\n  calcPosition() {\n    var _a, _b;\n\n    const container = this.container;\n    const percentPosition = this.options.position;\n    return Vector_1.Vector.create(((_a = percentPosition === null || percentPosition === void 0 ? void 0 : percentPosition.x) !== null && _a !== void 0 ? _a : Math.random() * 100) / 100 * container.canvas.size.width, ((_b = percentPosition === null || percentPosition === void 0 ? void 0 : percentPosition.y) !== null && _b !== void 0 ? _b : Math.random() * 100) / 100 * container.canvas.size.height);\n  }\n\n  updateParticlePosition(particle, v) {\n    var _a;\n\n    if (particle.destroyed) {\n      return;\n    }\n\n    const canvasSize = this.container.canvas.size;\n\n    if (particle.needsNewPosition) {\n      const pSize = particle.getRadius();\n      particle.position.x = Math.random() * (canvasSize.width - pSize * 2) + pSize;\n      particle.position.y = Math.random() * (canvasSize.height - pSize * 2) + pSize;\n      particle.needsNewPosition = false;\n    }\n\n    if (this.options.orbits) {\n      if (particle.orbit === undefined) {\n        particle.orbit = Vector_1.Vector.create(0, 0);\n        particle.orbit.length = Utils_1.getDistance(particle.getPosition(), this.position);\n        particle.orbit.angle = Math.random() * Math.PI * 2;\n      }\n\n      if (particle.orbit.length <= this.size && !this.options.destroy) {\n        particle.orbit.length = Math.random() * Math.max(canvasSize.width, canvasSize.height);\n      }\n\n      particle.velocity.x = 0;\n      particle.velocity.y = 0;\n      particle.position.setTo(particle.orbit.add(this.position));\n      particle.orbit.length -= v.length;\n      particle.orbit.angle += ((_a = particle.moveSpeed) !== null && _a !== void 0 ? _a : Utils_1.getRangeValue(particle.options.move.speed) * this.container.retina.pixelRatio) / 100 * this.container.retina.reduceFactor;\n    } else {\n      particle.velocity.addTo(v);\n    }\n  }\n\n}\n\nexports.AbsorberInstance = AbsorberInstance;","map":{"version":3,"names":["Object","defineProperty","exports","value","AbsorberInstance","Utils_1","require","Vector_1","constructor","absorbers","container","options","position","_a","_b","_c","initialPosition","Vector","create","x","y","undefined","dragging","name","opacity","size","getValue","retina","pixelRatio","mass","density","reduceFactor","limit","color","colorToRgb","b","g","r","copy","calcPosition","attract","particle","draggable","mouse","interactivity","clicking","downPosition","mouseDist","getDistance","pos","getPosition","dx","dy","distance","getDistances","v","length","Math","pow","getRadius","sizeFactor","destroy","needsNewPosition","updateParticlePosition","resize","isPointInside","canvas","draw","context","translate","beginPath","arc","PI","closePath","fillStyle","getStyleFromRgb","fill","percentPosition","random","width","height","destroyed","canvasSize","pSize","orbits","orbit","angle","max","velocity","setTo","add","moveSpeed","getRangeValue","move","speed","addTo"],"sources":["/Users/raunakanand/Documents/GitHub/react-personal-website/node_modules/tsparticles/Plugins/Absorbers/AbsorberInstance.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AbsorberInstance = void 0;\nconst Utils_1 = require(\"../../Utils\");\nconst Vector_1 = require(\"../../Core/Particle/Vector\");\nclass AbsorberInstance {\n    constructor(absorbers, container, options, position) {\n        var _a, _b, _c;\n        this.absorbers = absorbers;\n        this.container = container;\n        this.initialPosition = position ? Vector_1.Vector.create(position.x, position.y) : undefined;\n        this.options = options;\n        this.dragging = false;\n        this.name = this.options.name;\n        this.opacity = this.options.opacity;\n        this.size = Utils_1.getValue(options.size) * container.retina.pixelRatio;\n        this.mass = this.size * options.size.density * container.retina.reduceFactor;\n        const limit = options.size.limit;\n        this.limit = limit !== undefined ? limit * container.retina.pixelRatio * container.retina.reduceFactor : limit;\n        const color = typeof options.color === \"string\" ? { value: options.color } : options.color;\n        this.color = (_a = Utils_1.colorToRgb(color)) !== null && _a !== void 0 ? _a : {\n            b: 0,\n            g: 0,\n            r: 0,\n        };\n        this.position = (_c = (_b = this.initialPosition) === null || _b === void 0 ? void 0 : _b.copy()) !== null && _c !== void 0 ? _c : this.calcPosition();\n    }\n    attract(particle) {\n        const options = this.options;\n        if (options.draggable) {\n            const mouse = this.container.interactivity.mouse;\n            if (mouse.clicking && mouse.downPosition) {\n                const mouseDist = Utils_1.getDistance(this.position, mouse.downPosition);\n                if (mouseDist <= this.size) {\n                    this.dragging = true;\n                }\n            }\n            else {\n                this.dragging = false;\n            }\n            if (this.dragging && mouse.position) {\n                this.position.x = mouse.position.x;\n                this.position.y = mouse.position.y;\n            }\n        }\n        const pos = particle.getPosition();\n        const { dx, dy, distance } = Utils_1.getDistances(this.position, pos);\n        const v = Vector_1.Vector.create(dx, dy);\n        v.length = (this.mass / Math.pow(distance, 2)) * this.container.retina.reduceFactor;\n        if (distance < this.size + particle.getRadius()) {\n            const sizeFactor = particle.getRadius() * 0.033 * this.container.retina.pixelRatio;\n            if (this.size > particle.getRadius() && distance < this.size - particle.getRadius()) {\n                if (options.destroy) {\n                    particle.destroy();\n                }\n                else {\n                    particle.needsNewPosition = true;\n                    this.updateParticlePosition(particle, v);\n                }\n            }\n            else {\n                if (options.destroy) {\n                    particle.size.value -= sizeFactor;\n                }\n                this.updateParticlePosition(particle, v);\n            }\n            if (this.limit === undefined || this.size < this.limit) {\n                this.size += sizeFactor;\n            }\n            this.mass += sizeFactor * this.options.size.density * this.container.retina.reduceFactor;\n        }\n        else {\n            this.updateParticlePosition(particle, v);\n        }\n    }\n    resize() {\n        const initialPosition = this.initialPosition;\n        this.position =\n            initialPosition && Utils_1.isPointInside(initialPosition, this.container.canvas.size)\n                ? initialPosition\n                : this.calcPosition();\n    }\n    draw(context) {\n        context.translate(this.position.x, this.position.y);\n        context.beginPath();\n        context.arc(0, 0, this.size, 0, Math.PI * 2, false);\n        context.closePath();\n        context.fillStyle = Utils_1.getStyleFromRgb(this.color, this.opacity);\n        context.fill();\n    }\n    calcPosition() {\n        var _a, _b;\n        const container = this.container;\n        const percentPosition = this.options.position;\n        return Vector_1.Vector.create((((_a = percentPosition === null || percentPosition === void 0 ? void 0 : percentPosition.x) !== null && _a !== void 0 ? _a : Math.random() * 100) / 100) * container.canvas.size.width, (((_b = percentPosition === null || percentPosition === void 0 ? void 0 : percentPosition.y) !== null && _b !== void 0 ? _b : Math.random() * 100) / 100) * container.canvas.size.height);\n    }\n    updateParticlePosition(particle, v) {\n        var _a;\n        if (particle.destroyed) {\n            return;\n        }\n        const canvasSize = this.container.canvas.size;\n        if (particle.needsNewPosition) {\n            const pSize = particle.getRadius();\n            particle.position.x = Math.random() * (canvasSize.width - pSize * 2) + pSize;\n            particle.position.y = Math.random() * (canvasSize.height - pSize * 2) + pSize;\n            particle.needsNewPosition = false;\n        }\n        if (this.options.orbits) {\n            if (particle.orbit === undefined) {\n                particle.orbit = Vector_1.Vector.create(0, 0);\n                particle.orbit.length = Utils_1.getDistance(particle.getPosition(), this.position);\n                particle.orbit.angle = Math.random() * Math.PI * 2;\n            }\n            if (particle.orbit.length <= this.size && !this.options.destroy) {\n                particle.orbit.length = Math.random() * Math.max(canvasSize.width, canvasSize.height);\n            }\n            particle.velocity.x = 0;\n            particle.velocity.y = 0;\n            particle.position.setTo(particle.orbit.add(this.position));\n            particle.orbit.length -= v.length;\n            particle.orbit.angle +=\n                (((_a = particle.moveSpeed) !== null && _a !== void 0 ? _a : Utils_1.getRangeValue(particle.options.move.speed) * this.container.retina.pixelRatio) /\n                    100) *\n                    this.container.retina.reduceFactor;\n        }\n        else {\n            particle.velocity.addTo(v);\n        }\n    }\n}\nexports.AbsorberInstance = AbsorberInstance;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}